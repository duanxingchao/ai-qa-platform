2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - [cached since 308.2s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 3, 21, 26, 631306)}
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.updated_at >= %(updated_at_1)s AND answers.is_scored = true) AS anon_1
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - [cached since 308.2s ago] {'updated_at_1': datetime.datetime(2025, 8, 19, 3, 21, 26, 631306)}
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - SELECT date_trunc(%(date_trunc_1)s, questions.created_at) AS day, count(questions.id) AS count 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s GROUP BY date_trunc(%(date_trunc_2)s, questions.created_at) ORDER BY day
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - [cached since 308.2s ago] {'date_trunc_1': 'day', 'created_at_1': datetime.datetime(2025, 8, 12, 3, 51, 26, 645062), 'date_trunc_2': 'day'}
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - SELECT date_trunc(%(date_trunc_1)s, questions.updated_at) AS day, count(questions.id) AS count 
FROM questions 
WHERE questions.updated_at >= %(updated_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND questions.processing_status IN (%(processing_status_1_1)s, %(processing_status_1_2)s, %(processing_status_1_3)s) GROUP BY date_trunc(%(date_trunc_2)s, questions.updated_at) ORDER BY day
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - [cached since 308.2s ago] {'date_trunc_1': 'day', 'updated_at_1': datetime.datetime(2025, 8, 12, 3, 51, 26, 645062), 'classification_1': '', 'date_trunc_2': 'day', 'processing_status_1_1': 'classified', 'processing_status_1_2': 'answers_generated', 'processing_status_1_3': 'scored'}
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - SELECT date_trunc(%(date_trunc_1)s, answers.created_at) AS day, count(answers.id) AS count 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE answers.created_at >= %(created_at_1)s AND questions.created_at >= %(created_at_2)s AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s) AND answers.is_scored = true AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s GROUP BY date_trunc(%(date_trunc_2)s, answers.created_at) ORDER BY day
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - [cached since 308.2s ago] {'date_trunc_1': 'day', 'created_at_1': datetime.datetime(2025, 8, 12, 3, 51, 26, 645062), 'created_at_2': datetime.datetime(2025, 8, 12, 3, 51, 26, 645062), 'classification_1': '', 'date_trunc_2': 'day', 'assistant_type_1_1': 'doubao', 'assistant_type_1_2': 'xiaotian'}
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - SELECT answers.assistant_type AS answers_assistant_type, avg(scores.score_1) AS avg_score_1, avg(scores.score_2) AS avg_score_2, avg(scores.score_3) AS avg_score_3, avg(scores.score_4) AS avg_score_4, avg(scores.score_5) AS avg_score_5, avg(scores.average_score) AS avg_total, count(scores.id) AS score_count 
FROM answers JOIN scores ON answers.id = scores.answer_id GROUP BY answers.assistant_type
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - [cached since 308.2s ago] {}
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - SELECT system_config.id AS system_config_id, system_config.config_key AS system_config_config_key, system_config.config_value AS system_config_config_value, system_config.config_type AS system_config_config_type, system_config.description AS system_config_description, system_config.effective_time AS system_config_effective_time, system_config.previous_value AS system_config_previous_value, system_config.status AS system_config_status, system_config.created_at AS system_config_created_at, system_config.updated_at AS system_config_updated_at 
FROM system_config 
WHERE system_config.config_key = %(config_key_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - [cached since 2647s ago] {'config_key_1': 'display.hot_categories_time_range', 'param_1': 1}
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - SELECT questions.classification AS name, count(questions.id) AS count 
FROM questions 
WHERE questions.classification IS NOT NULL AND questions.classification != %(classification_1)s GROUP BY questions.classification
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - [cached since 308.2s ago] {'classification_1': ''}
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - SELECT questions.classification AS name, count(questions.id) AS count 
FROM questions 
WHERE questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND questions.created_at >= %(created_at_1)s GROUP BY questions.classification ORDER BY count(questions.id) DESC
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - [cached since 308.2s ago] {'classification_1': '', 'created_at_1': datetime.datetime(2025, 8, 12, 3, 51, 26, 651712)}
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions ORDER BY questions.created_at DESC 
 LIMIT %(param_1)s
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - [cached since 308.2s ago] {'param_1': 5}
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers ORDER BY answers.created_at DESC 
 LIMIT %(param_1)s
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - [cached since 308.2s ago] {'param_1': 5}
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - SELECT scores.id AS scores_id, scores.answer_id AS scores_answer_id, scores.score_1 AS scores_score_1, scores.score_2 AS scores_score_2, scores.score_3 AS scores_score_3, scores.score_4 AS scores_score_4, scores.score_5 AS scores_score_5, scores.dimension_1_name AS scores_dimension_1_name, scores.dimension_2_name AS scores_dimension_2_name, scores.dimension_3_name AS scores_dimension_3_name, scores.dimension_4_name AS scores_dimension_4_name, scores.dimension_5_name AS scores_dimension_5_name, scores.average_score AS scores_average_score, scores.comment AS scores_comment, scores.rated_at AS scores_rated_at 
FROM scores ORDER BY scores.rated_at DESC 
 LIMIT %(param_1)s
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - [cached since 308.2s ago] {'param_1': 5}
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - [cached since 308.3s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 3, 46, 26, 655536)}
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - [cached since 308.2s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 3, 46, 26, 655536)}
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT scores.id AS scores_id, scores.answer_id AS scores_answer_id, scores.score_1 AS scores_score_1, scores.score_2 AS scores_score_2, scores.score_3 AS scores_score_3, scores.score_4 AS scores_score_4, scores.score_5 AS scores_score_5, scores.dimension_1_name AS scores_dimension_1_name, scores.dimension_2_name AS scores_dimension_2_name, scores.dimension_3_name AS scores_dimension_3_name, scores.dimension_4_name AS scores_dimension_4_name, scores.dimension_5_name AS scores_dimension_5_name, scores.average_score AS scores_average_score, scores.comment AS scores_comment, scores.rated_at AS scores_rated_at 
FROM scores 
WHERE scores.rated_at >= %(rated_at_1)s) AS anon_1
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - [cached since 308.2s ago] {'rated_at_1': datetime.datetime(2025, 8, 19, 3, 46, 26, 655536)}
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.assistant_type = %(assistant_type_1)s AND answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - [cached since 308.2s ago] {'assistant_type_1': 'yoyo', 'created_at_1': datetime.datetime(2025, 8, 19, 3, 46, 26, 655536)}
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.assistant_type = %(assistant_type_1)s AND answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - [cached since 308.2s ago] {'assistant_type_1': 'doubao', 'created_at_1': datetime.datetime(2025, 8, 19, 3, 46, 26, 655536)}
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.assistant_type = %(assistant_type_1)s AND answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - [cached since 308.2s ago] {'assistant_type_1': 'xiaotian', 'created_at_1': datetime.datetime(2025, 8, 19, 3, 46, 26, 655536)}
2025-08-19 11:51:26 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:51:32 - apscheduler.scheduler - DEBUG - Looking for jobs to run
2025-08-19 11:51:32 - apscheduler.scheduler - DEBUG - Next wakeup is due at 2025-08-19 11:54:32.946633+08:00 (in 179.999329 seconds)
2025-08-19 11:51:32 - apscheduler.executors.default - INFO - Running job "可配置间隔AI处理工作流 (trigger: interval[0:03:00], next run at: 2025-08-19 11:54:32 CST)" (scheduled at 2025-08-19 11:51:32.946633+08:00)
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - 
                    SELECT COUNT(*) FROM table1 t1
                    WHERE t1.query IS NOT NULL
                    AND t1.query != ''
                    AND TRIM(t1.query) != ''
                    AND t1.sendmessagetime >= %(week_start)s
                    AND NOT EXISTS (
                        SELECT 1 FROM questions q
                        WHERE q.business_id = MD5(CONCAT(
                            t1.pageid,
                            COALESCE(to_char(t1.sendmessagetime, 'YYYY-MM-DD"T"HH24:MI:SS.US'), ''),
                            t1.query
                        ))
                    )
                
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'week_start': datetime.datetime(2025, 8, 18, 0, 0)}
2025-08-19 11:51:32 - app.services.scheduler_service - INFO - 🔍 检测到 100 条新数据需要同步
2025-08-19 11:51:32 - app.services.scheduler_service - INFO - 🔍 检测到 100 条新数据需要同步
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:51:32 - app.services.scheduler_service - INFO - 检测到可处理数据，开始执行完整工作流: workflow_20250819_035132
2025-08-19 11:51:32 - app.services.scheduler_service - INFO - 检测到可处理数据，开始执行完整工作流: workflow_20250819_035132
2025-08-19 11:51:32 - app.services.scheduler_service - INFO - 开始执行完整工作流: workflow_20250819_035132
2025-08-19 11:51:32 - app.services.scheduler_service - INFO - 开始执行完整工作流: workflow_20250819_035132
2025-08-19 11:51:32 - app.services.scheduler_service - INFO - 执行工作流阶段: data_sync
2025-08-19 11:51:32 - app.services.scheduler_service - INFO - 执行工作流阶段: data_sync
2025-08-19 11:51:32 - app.services.scheduler_service - INFO - 开始执行数据同步阶段 [workflow: workflow_20250819_035132]
2025-08-19 11:51:32 - app.services.scheduler_service - INFO - 开始执行数据同步阶段 [workflow: workflow_20250819_035132]
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.sendmessagetime <= %(sendmessagetime_1)s ORDER BY questions.sendmessagetime DESC 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'sendmessagetime_1': datetime.datetime(2025, 8, 19, 3, 51, 32, 950630), 'param_1': 1}
2025-08-19 11:51:32 - app.services.sync_service - DEBUG - 获取最后同步时间: 2025-08-18 16:10:00
2025-08-19 11:51:32 - app.services.sync_service - DEBUG - 获取最后同步时间: 2025-08-18 16:10:00
2025-08-19 11:51:32 - app.services.sync_service - INFO - 开始数据同步，最后同步时间: 2025-08-18 16:10:00
2025-08-19 11:51:32 - app.services.sync_service - INFO - 开始数据同步，最后同步时间: 2025-08-18 16:10:00
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - 
                    SELECT
                        t1.pageid,
                        t1.devicetypename,
                        t1.sendmessagetime,
                        t1.query,
                        t1.answer,
                        t1.serviceid,
                        t1.qatype,
                        t1.intent,
                        t1.iskeyboardinput,
                        t1.isstopanswer
                    FROM table1 t1
                    WHERE t1.query IS NOT NULL
                    AND t1.query != ''
                    AND TRIM(t1.query) != ''
                    AND t1.sendmessagetime >= %(week_start)s
                    AND NOT EXISTS (
                        SELECT 1 FROM questions q
                        WHERE q.business_id = MD5(CONCAT(
                            t1.pageid,
                            COALESCE(to_char(t1.sendmessagetime, 'YYYY-MM-DD"T"HH24:MI:SS.US'), ''),
                            t1.query
                        ))
                    )
                    ORDER BY t1.sendmessagetime ASC
                
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'week_start': datetime.datetime(2025, 8, 18, 0, 0)}
2025-08-19 11:51:32 - app.services.sync_service - INFO - 从table1获取到 100 条有效数据（已过滤空query记录）
2025-08-19 11:51:32 - app.services.sync_service - INFO - 从table1获取到 100 条有效数据（已过滤空query记录）
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': '7b22a0db6a8da27938ddb5e14c4ff019', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 955636), 'questions_id': 1442}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': 'a27722b4e4689fff4566cd43b74fb06a', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 957327), 'questions_id': 1443}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': 'e8146d52bbe9ceab98d2dab6e30db2ed', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 958975), 'questions_id': 1392}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': 'cf2211fc9eb449469613db5f947efcab', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 960538), 'questions_id': 1444}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': 'bccbc6acf52f7e3d5a33df48d444ad92', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 961949), 'questions_id': 1445}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': '8cf63d22e34f4e0ec9b9620c934bf0c3', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 963496), 'questions_id': 1393}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': '26a58fb2a92766f3339f88b759509552', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 964872), 'questions_id': 1446}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': '83af0a8ba059bc2c346d8a6c3a6a0a19', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 966801), 'questions_id': 1394}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': 'bda2755170f34fe6f27354d66c2ca883', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 968449), 'questions_id': 1447}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': '559bf43db7176d56a855bb6e9f764c78', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 970041), 'questions_id': 1448}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': '4afddbe0e4f85fe9d9ca9e5a2d974765', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 972100), 'questions_id': 1449}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': '8e818135ba252084f447a1942a9b767a', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 973933), 'questions_id': 1395}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': 'c54e7b687d7c7a3fced8ae1f52abe999', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 975616), 'questions_id': 1396}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': 'eab488b34a407e97c5f072469a39271c', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 977132), 'questions_id': 1397}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': '2301d5e861f65c94d6a64ed2b96d9dd9', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 978619), 'questions_id': 1398}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': '93182fbb00a15577f97dd4690e47409b', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 980116), 'questions_id': 1399}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': 'd7af7cdc55e6095954e54853950dca00', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 981716), 'questions_id': 1400}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': '476cf6801589678be6d902d42201403d', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 983658), 'questions_id': 1450}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': '37262c3322dd72a8858e217524a7779e', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 986081), 'questions_id': 1401}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': '9415eca2590ecea62f7df749020fa547', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 988285), 'questions_id': 1402}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': 'ec35612004b49e34dcc9278e55a7d2f8', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 990125), 'questions_id': 1451}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': '25ac57f77fad223774447e352c41e3fa', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 991653), 'questions_id': 1403}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': 'd1c2ae818e77f62512f0aa58f6f2a176', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 993362), 'questions_id': 1404}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': 'e71700f69964aea6bc67ed87c6a0c7f1', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 994969), 'questions_id': 1452}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': 'd6aac89b32b8165fd705a2512115d6b6', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 996421), 'questions_id': 1405}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': '1e7c5dbbb6d53987cf4421d04192de54', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 997815), 'questions_id': 1453}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': 'a3997eb480bb83e227cb127014d9c5de', 'param_1': 1}
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:32 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 32, 999455), 'questions_id': 1406}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': '58cb16a3b63a39b78e9cac44515a691f', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 1176), 'questions_id': 1454}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': 'ff3e43663c47f1f9cdb30598f948c1fd', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 14420), 'questions_id': 1407}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': '58e4d6692af69a7574d6403d2a76f642', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 20938), 'questions_id': 1455}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': 'aea7cecac9497d1a2db5f82e13b4a40d', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 27387), 'questions_id': 1456}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': '3d3e9900bb1823addc52b05ab805548d', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 29414), 'questions_id': 1457}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': 'e8031d6dc5ad042a1faf7c87eb3c33e4', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 31595), 'questions_id': 1408}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': '063a9bb2bdb76974c0e6cd0cf993aa8d', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 33719), 'questions_id': 1409}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': '7b6de1e7defb384d55ad5445a35e2b3f', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 35717), 'questions_id': 1410}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'business_id_1': '44920b916dded33cef752c3d10769be6', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2653s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 37574), 'questions_id': 1458}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '09efb4c13a9f784ff6610e416ba62518', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 804853), 'questions_id': 1459}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '3a3002b25c43c46586311f91e39efa26', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 807005), 'questions_id': 1460}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '6fc6a2b6471e48421dd6fd3aa64beb89', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 809079), 'questions_id': 1411}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '828bea08c44e4bbdd02baa273a436935', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 810879), 'questions_id': 1461}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '380360f5ea5dc0764551e5acb2ebc410', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 812385), 'questions_id': 1462}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'bd1c654a9212288a7e1569b677c83805', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 813779), 'questions_id': 1412}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'd7bd74f3c451232064432fc276fa5081', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 815327), 'questions_id': 1413}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '84a16679cd9dc04456db586390435877', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 816725), 'questions_id': 1463}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'e9035292d035a654b9568f280dcf17b7', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 818314), 'questions_id': 1464}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '1c7659fdbde3a9b84e0843d6d977c2a1', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 820057), 'questions_id': 1414}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'f978b28fc9602c9088cf928ac6ddc303', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 821517), 'questions_id': 1465}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '10f537f262dc967bb6b437a36a807693', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 822940), 'questions_id': 1466}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '4a38de5882144711aa271d5dcdab01ed', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 825070), 'questions_id': 1415}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'f1577e3c6e73b6c0bda886e04aafd5f5', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 827266), 'questions_id': 1416}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'eba73120ca001671932a8955f1e6502c', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 829295), 'questions_id': 1467}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'e43eac6a5209fe4dddbf58fee1118456', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 830932), 'questions_id': 1468}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'd73ea149be03f79c96ab04f432609b95', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 832678), 'questions_id': 1417}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '67a7220c882847d929551b506d5b02d6', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 834289), 'questions_id': 1469}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '6b3611061dd6c2e9cca9716d3d76c0e6', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 836241), 'questions_id': 1418}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '64e03738bb9b5a017a793983da1957a5', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 838059), 'questions_id': 1419}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'cd0f201075e6cefeef3250a7ca1e6b10', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 839751), 'questions_id': 1420}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'fcc0c7c305bde4bf80f937b0bef22c60', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 844553), 'questions_id': 1470}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '657142c1ef7787290214ddb5c29ba484', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 846100), 'questions_id': 1421}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'c2879217915964b9b44293fedb735e76', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 847654), 'questions_id': 1471}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '6a1718477906f52e99e007231f5a3680', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 849149), 'questions_id': 1422}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '486cb0fb43550bd5e3a4712f5d8c239e', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 850867), 'questions_id': 1472}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'e9b3bf1ae1a13315114eb48ccbe2b4d9', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 852987), 'questions_id': 1423}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'ea742fcbed6bbcb8083b5cc74532df8c', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 854640), 'questions_id': 1424}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'a875627b35ce07a58ab3d0027c6a8370', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 856210), 'questions_id': 1473}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '6efb0a50286801858598577f9756f7cc', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 857602), 'questions_id': 1425}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '543604c1d8586351fe6a678a9fd008e7', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 859233), 'questions_id': 1426}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '856bb8e9e6f0d36668696bcee09efab4', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 860828), 'questions_id': 1474}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '3567a04656692d20345dd5cf6a172557', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 862748), 'questions_id': 1475}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'ab59d9cd71a448796498fc71e9d8f6c8', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 864415), 'questions_id': 1476}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'bf1a413af58d43c6507bb5858b7dbd6e', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 865915), 'questions_id': 1477}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'aaa51f5e54f60689fc4c36b9a3a7102a', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 867434), 'questions_id': 1478}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '3b352100564af98b6ff41e23203f2909', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 868867), 'questions_id': 1427}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'dd444ad77363513b54634d88d3fbc9d4', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 870490), 'questions_id': 1428}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '3e5cc1ef96642a3e987560c280949c42', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 872087), 'questions_id': 1479}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '850f7332e52b0e3dba497ff033582734', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 874074), 'questions_id': 1480}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'fb74179539eb09871c3fbc30b1ac2bb1', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 876027), 'questions_id': 1429}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'df8e958246f05720262731d1ed95ec39', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 877848), 'questions_id': 1430}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'eab26ea5a9627755989016fd9940ce6a', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 879466), 'questions_id': 1431}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'd5de7bf900a96ce5917d78ba0a10fa6b', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 881231), 'questions_id': 1432}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '55a1667487a24b1fb344a1e7b19097d8', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 882767), 'questions_id': 1433}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'eff8009dc492fe92c5b0d74b0ac9e918', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 884172), 'questions_id': 1481}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '1116234feabe953e69bd08b644bfcf91', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 885559), 'questions_id': 1482}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '3ad95a0699ea9ea4d71e86ab59ec0e9c', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 887318), 'questions_id': 1434}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '6536f9fefa9f4ee74cc3b59549e6ffc8', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 889089), 'questions_id': 1483}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'd82e28635e9339c2b368eda6023a78ab', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 890606), 'questions_id': 1484}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '8205141c43ea2e3ddf6853f8218f7a35', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 892069), 'questions_id': 1435}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'bd26a1df8aee135a29051d34447b92ff', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 893597), 'questions_id': 1436}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'dd8e171ece7f52a534f7533523ccce61', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 895282), 'questions_id': 1485}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '5aa571d1381308d07c4d92f39be95138', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 897432), 'questions_id': 1437}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '101eb0aa498164cc8cfccad92e7dab01', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 899001), 'questions_id': 1438}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'c25e922db50a65ea3234b3e5752a7a42', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 900468), 'questions_id': 1439}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '2ac14b547359a76a56c8223e936c9bcf', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 901867), 'questions_id': 1440}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '311507341fc409952638bc21815ed3b1', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 903465), 'questions_id': 1486}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '6f7b916e9762180ab48441a60ed003c4', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 905146), 'questions_id': 1441}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'caabdae8891949bd04ad7fb58c6c19ac', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 906578), 'questions_id': 1487}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '85df4b45dd2f67f43381a8aa8bc73ed6', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 908077), 'questions_id': 1488}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': '1bc9890c4f5c268e0037227842e3555a', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 909726), 'questions_id': 1489}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'cb65f4d7139905c577dc0af4487a9019', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 911682), 'questions_id': 1490}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'business_id_1': 'effc0627762f70208a9bc927af1b111a', 'param_1': 1}
2025-08-19 11:51:33 - app.services.sync_service - INFO - 准备同步 100 条数据到questions表（classification字段将由AI处理服务填充）
2025-08-19 11:51:33 - app.services.sync_service - INFO - 准备同步 100 条数据到questions表（classification字段将由AI处理服务填充）
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 913134), 'questions_id': 1491}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '7b22a0db6a8da27938ddb5e14c4ff019', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 914918), 'answers_id': 4287}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'a27722b4e4689fff4566cd43b74fb06a', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 916626), 'answers_id': 4288}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'e8146d52bbe9ceab98d2dab6e30db2ed', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 918495), 'answers_id': 4137}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'cf2211fc9eb449469613db5f947efcab', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 920052), 'answers_id': 4289}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'bccbc6acf52f7e3d5a33df48d444ad92', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 921563), 'answers_id': 4290}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '8cf63d22e34f4e0ec9b9620c934bf0c3', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 923136), 'answers_id': 4138}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '26a58fb2a92766f3339f88b759509552', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 924519), 'answers_id': 4291}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '83af0a8ba059bc2c346d8a6c3a6a0a19', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 925833), 'answers_id': 4139}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'bda2755170f34fe6f27354d66c2ca883', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 927490), 'answers_id': 4292}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '559bf43db7176d56a855bb6e9f764c78', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 928955), 'answers_id': 4293}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '4afddbe0e4f85fe9d9ca9e5a2d974765', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 930287), 'answers_id': 4294}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '8e818135ba252084f447a1942a9b767a', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 931728), 'answers_id': 4140}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'c54e7b687d7c7a3fced8ae1f52abe999', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 933300), 'answers_id': 4141}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'eab488b34a407e97c5f072469a39271c', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 934851), 'answers_id': 4142}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '2301d5e861f65c94d6a64ed2b96d9dd9', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 936322), 'answers_id': 4143}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '93182fbb00a15577f97dd4690e47409b', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 938019), 'answers_id': 4144}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'd7af7cdc55e6095954e54853950dca00', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 939729), 'answers_id': 4145}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '476cf6801589678be6d902d42201403d', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 941186), 'answers_id': 4295}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '37262c3322dd72a8858e217524a7779e', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 942646), 'answers_id': 4146}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '9415eca2590ecea62f7df749020fa547', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 944189), 'answers_id': 4147}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'ec35612004b49e34dcc9278e55a7d2f8', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 945630), 'answers_id': 4296}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '25ac57f77fad223774447e352c41e3fa', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 947253), 'answers_id': 4148}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'd1c2ae818e77f62512f0aa58f6f2a176', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 948638), 'answers_id': 4149}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'e71700f69964aea6bc67ed87c6a0c7f1', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 949978), 'answers_id': 4297}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'd6aac89b32b8165fd705a2512115d6b6', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 951505), 'answers_id': 4150}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '1e7c5dbbb6d53987cf4421d04192de54', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 953052), 'answers_id': 4298}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'a3997eb480bb83e227cb127014d9c5de', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 954518), 'answers_id': 4151}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '58cb16a3b63a39b78e9cac44515a691f', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 955972), 'answers_id': 4299}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'ff3e43663c47f1f9cdb30598f948c1fd', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 957344), 'answers_id': 4152}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '58e4d6692af69a7574d6403d2a76f642', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 959009), 'answers_id': 4300}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'aea7cecac9497d1a2db5f82e13b4a40d', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 960679), 'answers_id': 4301}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '3d3e9900bb1823addc52b05ab805548d', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 962501), 'answers_id': 4302}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'e8031d6dc5ad042a1faf7c87eb3c33e4', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 964180), 'answers_id': 4153}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '063a9bb2bdb76974c0e6cd0cf993aa8d', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 965723), 'answers_id': 4154}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '7b6de1e7defb384d55ad5445a35e2b3f', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 967146), 'answers_id': 4155}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '44920b916dded33cef752c3d10769be6', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 968608), 'answers_id': 4303}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '09efb4c13a9f784ff6610e416ba62518', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 969972), 'answers_id': 4304}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '3a3002b25c43c46586311f91e39efa26', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 971481), 'answers_id': 4305}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '6fc6a2b6471e48421dd6fd3aa64beb89', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 972829), 'answers_id': 4156}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '828bea08c44e4bbdd02baa273a436935', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 974316), 'answers_id': 4306}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '380360f5ea5dc0764551e5acb2ebc410', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 976390), 'answers_id': 4307}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'bd1c654a9212288a7e1569b677c83805', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 978551), 'answers_id': 4157}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'd7bd74f3c451232064432fc276fa5081', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 980320), 'answers_id': 4158}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '84a16679cd9dc04456db586390435877', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 982089), 'answers_id': 4308}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'e9035292d035a654b9568f280dcf17b7', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 983729), 'answers_id': 4309}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '1c7659fdbde3a9b84e0843d6d977c2a1', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 985169), 'answers_id': 4159}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'f978b28fc9602c9088cf928ac6ddc303', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 986634), 'answers_id': 4310}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '10f537f262dc967bb6b437a36a807693', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 988273), 'answers_id': 4311}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '4a38de5882144711aa271d5dcdab01ed', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 989808), 'answers_id': 4160}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'f1577e3c6e73b6c0bda886e04aafd5f5', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 991470), 'answers_id': 4161}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'eba73120ca001671932a8955f1e6502c', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 993164), 'answers_id': 4312}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'e43eac6a5209fe4dddbf58fee1118456', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 994760), 'answers_id': 4313}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'd73ea149be03f79c96ab04f432609b95', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 996257), 'answers_id': 4162}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '67a7220c882847d929551b506d5b02d6', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 997659), 'answers_id': 4314}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '6b3611061dd6c2e9cca9716d3d76c0e6', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:33 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 33, 999231), 'answers_id': 4163}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '64e03738bb9b5a017a793983da1957a5', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 3068), 'answers_id': 4164}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'cd0f201075e6cefeef3250a7ca1e6b10', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 9395), 'answers_id': 4165}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'fcc0c7c305bde4bf80f937b0bef22c60', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 16636), 'answers_id': 4315}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '657142c1ef7787290214ddb5c29ba484', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 18840), 'answers_id': 4166}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'c2879217915964b9b44293fedb735e76', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 20653), 'answers_id': 4316}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '6a1718477906f52e99e007231f5a3680', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 25249), 'answers_id': 4167}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '486cb0fb43550bd5e3a4712f5d8c239e', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 27351), 'answers_id': 4317}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'e9b3bf1ae1a13315114eb48ccbe2b4d9', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 29036), 'answers_id': 4168}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'ea742fcbed6bbcb8083b5cc74532df8c', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 30860), 'answers_id': 4169}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'a875627b35ce07a58ab3d0027c6a8370', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 32396), 'answers_id': 4318}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '6efb0a50286801858598577f9756f7cc', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 33903), 'answers_id': 4170}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '543604c1d8586351fe6a678a9fd008e7', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 35861), 'answers_id': 4171}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '856bb8e9e6f0d36668696bcee09efab4', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 37753), 'answers_id': 4319}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '3567a04656692d20345dd5cf6a172557', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 39507), 'answers_id': 4320}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'ab59d9cd71a448796498fc71e9d8f6c8', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 41129), 'answers_id': 4321}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'bf1a413af58d43c6507bb5858b7dbd6e', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 42661), 'answers_id': 4322}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'aaa51f5e54f60689fc4c36b9a3a7102a', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 44723), 'answers_id': 4323}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '3b352100564af98b6ff41e23203f2909', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 46727), 'answers_id': 4172}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'dd444ad77363513b54634d88d3fbc9d4', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 48455), 'answers_id': 4173}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '3e5cc1ef96642a3e987560c280949c42', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 50536), 'answers_id': 4324}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '850f7332e52b0e3dba497ff033582734', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 52452), 'answers_id': 4325}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'fb74179539eb09871c3fbc30b1ac2bb1', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 54075), 'answers_id': 4174}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'df8e958246f05720262731d1ed95ec39', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 59810), 'answers_id': 4175}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'eab26ea5a9627755989016fd9940ce6a', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 61463), 'answers_id': 4176}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'd5de7bf900a96ce5917d78ba0a10fa6b', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 62924), 'answers_id': 4177}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '55a1667487a24b1fb344a1e7b19097d8', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 64363), 'answers_id': 4178}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'eff8009dc492fe92c5b0d74b0ac9e918', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 65783), 'answers_id': 4326}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '1116234feabe953e69bd08b644bfcf91', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 67554), 'answers_id': 4327}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '3ad95a0699ea9ea4d71e86ab59ec0e9c', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 68988), 'answers_id': 4179}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '6536f9fefa9f4ee74cc3b59549e6ffc8', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 70499), 'answers_id': 4328}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'd82e28635e9339c2b368eda6023a78ab', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 71893), 'answers_id': 4329}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '8205141c43ea2e3ddf6853f8218f7a35', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 73301), 'answers_id': 4180}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'bd26a1df8aee135a29051d34447b92ff', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 74682), 'answers_id': 4181}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'dd8e171ece7f52a534f7533523ccce61', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 76083), 'answers_id': 4330}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '5aa571d1381308d07c4d92f39be95138', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 77438), 'answers_id': 4182}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '101eb0aa498164cc8cfccad92e7dab01', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 79003), 'answers_id': 4183}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'c25e922db50a65ea3234b3e5752a7a42', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 80692), 'answers_id': 4184}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '2ac14b547359a76a56c8223e936c9bcf', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 82574), 'answers_id': 4185}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '311507341fc409952638bc21815ed3b1', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 84138), 'answers_id': 4331}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '6f7b916e9762180ab48441a60ed003c4', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 85721), 'answers_id': 4186}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'caabdae8891949bd04ad7fb58c6c19ac', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 87364), 'answers_id': 4332}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '85df4b45dd2f67f43381a8aa8bc73ed6', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 88863), 'answers_id': 4333}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': '1bc9890c4f5c268e0037227842e3555a', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 90412), 'answers_id': 4334}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'cb65f4d7139905c577dc0af4487a9019', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 91894), 'answers_id': 4335}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'question_business_id_1': 'effc0627762f70208a9bc927af1b111a', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:51:34 - app.services.sync_service - INFO - 准备同步 100 条答案到answers表
2025-08-19 11:51:34 - app.services.sync_service - INFO - 准备同步 100 条答案到answers表
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 51, 34, 93662), 'answers_id': 4336}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-08-19 11:51:34 - app.services.sync_service - INFO - 数据同步完成: {'success': True, 'message': '成功同步 100 条问题和 100 条答案', 'synced_questions': 100, 'synced_answers': 100, 'total_synced': 1700}
2025-08-19 11:51:34 - app.services.sync_service - INFO - 数据同步完成: {'success': True, 'message': '成功同步 100 条问题和 100 条答案', 'synced_questions': 100, 'synced_answers': 100, 'total_synced': 1700}
2025-08-19 11:51:34 - app.services.scheduler_service - INFO - 数据同步阶段完成: 成功同步 100 条问题和 100 条答案
2025-08-19 11:51:34 - app.services.scheduler_service - INFO - 数据同步阶段完成: 成功同步 100 条问题和 100 条答案
2025-08-19 11:51:34 - app.services.scheduler_service - INFO - 执行工作流阶段: classification
2025-08-19 11:51:34 - app.services.scheduler_service - INFO - 执行工作流阶段: classification
2025-08-19 11:51:34 - app.services.scheduler_service - INFO - 开始执行分类处理阶段 [workflow: workflow_20250819_035132]
2025-08-19 11:51:34 - app.services.scheduler_service - INFO - 开始执行分类处理阶段 [workflow: workflow_20250819_035132]
2025-08-19 11:51:34 - app.services.ai_processing_service - INFO - 开始批量分类处理
2025-08-19 11:51:34 - app.services.ai_processing_service - INFO - 开始批量分类处理
2025-08-19 11:51:34 - app.services.ai_processing_service - INFO - 查找所有待分类问题（不限制时间范围和处理状态）
2025-08-19 11:51:34 - app.services.ai_processing_service - INFO - 查找所有待分类问题（不限制时间范围和处理状态）
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE (questions.classification IS NULL OR questions.classification = %(classification_1)s) AND questions.is_deleted = false ORDER BY questions.created_at DESC
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'classification_1': ''}
2025-08-19 11:51:34 - app.services.scheduler_service - INFO - 分类处理阶段完成: 没有需要分类的问题
2025-08-19 11:51:34 - app.services.scheduler_service - INFO - 分类处理阶段完成: 没有需要分类的问题
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:51:34 - app.services.scheduler_service - INFO - 执行工作流阶段: answer_generation
2025-08-19 11:51:34 - app.services.scheduler_service - INFO - 执行工作流阶段: answer_generation
2025-08-19 11:51:34 - app.services.scheduler_service - INFO - 开始执行答案生成阶段 [workflow: workflow_20250819_035132]
2025-08-19 11:51:34 - app.services.scheduler_service - INFO - 开始执行答案生成阶段 [workflow: workflow_20250819_035132]
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT system_config.id AS system_config_id, system_config.config_key AS system_config_config_key, system_config.config_value AS system_config_config_value, system_config.config_type AS system_config_config_type, system_config.description AS system_config_description, system_config.effective_time AS system_config_effective_time, system_config.previous_value AS system_config_previous_value, system_config.status AS system_config_status, system_config.created_at AS system_config_created_at, system_config.updated_at AS system_config_updated_at 
FROM system_config 
WHERE system_config.config_key = %(config_key_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'config_key_1': 'workflow.answer_generation_mode', 'param_1': 1}
2025-08-19 11:51:34 - app.services.scheduler_service - INFO - 当前答案生成模式: manual
2025-08-19 11:51:34 - app.services.scheduler_service - INFO - 当前答案生成模式: manual
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.processing_status = %(processing_status_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND (EXISTS (SELECT 1 
FROM answers 
WHERE answers.question_business_id = questions.business_id AND answers.assistant_type = %(assistant_type_1)s AND answers.answer_text IS NOT NULL AND answers.answer_text != %(answer_text_1)s)) AND NOT (EXISTS (SELECT 1 
FROM answers 
WHERE answers.question_business_id = questions.business_id AND answers.assistant_type = %(assistant_type_2)s)) AND NOT (EXISTS (SELECT 1 
FROM answers 
WHERE answers.question_business_id = questions.business_id AND answers.assistant_type = %(assistant_type_3)s))) AS anon_1
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2774s ago] {'processing_status_1': 'classified', 'classification_1': '', 'assistant_type_1': 'yoyo', 'answer_text_1': '', 'assistant_type_2': 'doubao', 'assistant_type_3': 'xiaotian'}
2025-08-19 11:51:34 - app.services.answer_generation_service - INFO - 待导出问题数量: 46 (已分类+有yoyo答案+缺少doubao/xiaotian答案)
2025-08-19 11:51:34 - app.services.answer_generation_service - INFO - 待导出问题数量: 46 (已分类+有yoyo答案+缺少doubao/xiaotian答案)
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:51:34 - app.services.scheduler_service - INFO - 执行工作流阶段: scoring
2025-08-19 11:51:34 - app.services.scheduler_service - INFO - 执行工作流阶段: scoring
2025-08-19 11:51:34 - app.services.scheduler_service - INFO - 开始执行评分处理阶段 [workflow: workflow_20250819_035132]
2025-08-19 11:51:34 - app.services.scheduler_service - INFO - 开始执行评分处理阶段 [workflow: workflow_20250819_035132]
2025-08-19 11:51:34 - app.services.ai_processing_service - INFO - 开始批量评分处理
2025-08-19 11:51:34 - app.services.ai_processing_service - INFO - 开始批量评分处理
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - SELECT DISTINCT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions JOIN answers ON questions.business_id = answers.question_business_id 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND questions.processing_status IN (%(processing_status_1_1)s, %(processing_status_1_2)s) AND answers.answer_text IS NOT NULL AND answers.answer_text != %(answer_text_1)s ORDER BY questions.created_at DESC
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - [cached since 2654s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 3, 51, 34, 105674), 'classification_1': '', 'answer_text_1': '', 'processing_status_1_1': 'answers_generated', 'processing_status_1_2': 'scoring'}
2025-08-19 11:51:34 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:51:34 - app.services.scheduler_service - INFO - 阶段 scoring 不自动进入下一阶段，工作流暂停
2025-08-19 11:51:34 - app.services.scheduler_service - INFO - 阶段 scoring 不自动进入下一阶段，工作流暂停
2025-08-19 11:51:34 - apscheduler.executors.default - INFO - Job "可配置间隔AI处理工作流 (trigger: interval[0:03:00], next run at: 2025-08-19 11:54:32 CST)" executed successfully
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT questions.classification AS questions_classification, count(questions.id) AS badcase_count 
FROM questions 
WHERE questions.is_badcase = true GROUP BY questions.classification ORDER BY count(questions.id) DESC 
 LIMIT %(param_1)s
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 338.4s ago] {'param_1': 3}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 1234s ago] {}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 1173s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored'}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - 
                WITH dimension_scores AS (
                    -- 维度1的数据
                    SELECT
                        s.dimension_1_name as dimension_name,
                        s.score_1 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_1_name IS NOT NULL
                    AND s.score_1 IS NOT NULL

                    UNION ALL

                    -- 维度2的数据
                    SELECT
                        s.dimension_2_name as dimension_name,
                        s.score_2 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_2_name IS NOT NULL
                    AND s.score_2 IS NOT NULL

                    UNION ALL

                    -- 维度3的数据
                    SELECT
                        s.dimension_3_name as dimension_name,
                        s.score_3 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_3_name IS NOT NULL
                    AND s.score_3 IS NOT NULL

                    UNION ALL

                    -- 维度4的数据
                    SELECT
                        s.dimension_4_name as dimension_name,
                        s.score_4 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_4_name IS NOT NULL
                    AND s.score_4 IS NOT NULL

                    UNION ALL

                    -- 维度5的数据
                    SELECT
                        s.dimension_5_name as dimension_name,
                        s.score_5 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_5_name IS NOT NULL
                    AND s.score_5 IS NOT NULL
                )
                SELECT
                    dimension_name,
                    AVG(score) as avg_score,
                    COUNT(*) as sample_count
                FROM dimension_scores
                GROUP BY dimension_name
                ORDER BY avg_score ASC
            
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.is_badcase = true) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.9s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0)}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 338.4s ago] {'classification': '产品使用'}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 1173s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored'}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.is_badcase = true AND questions.badcase_review_status = %(badcase_review_status_1)s) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.9s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': ''}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 1173s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored', 'badcase_review_status_1': 'pending'}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - 
                WITH dimension_scores AS (
                    -- 维度1的数据
                    SELECT
                        s.dimension_1_name as dimension_name,
                        s.score_1 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_1_name IS NOT NULL
                    AND s.score_1 IS NOT NULL

                    UNION ALL

                    -- 维度2的数据
                    SELECT
                        s.dimension_2_name as dimension_name,
                        s.score_2 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_2_name IS NOT NULL
                    AND s.score_2 IS NOT NULL

                    UNION ALL

                    -- 维度3的数据
                    SELECT
                        s.dimension_3_name as dimension_name,
                        s.score_3 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_3_name IS NOT NULL
                    AND s.score_3 IS NOT NULL

                    UNION ALL

                    -- 维度4的数据
                    SELECT
                        s.dimension_4_name as dimension_name,
                        s.score_4 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_4_name IS NOT NULL
                    AND s.score_4 IS NOT NULL

                    UNION ALL

                    -- 维度5的数据
                    SELECT
                        s.dimension_5_name as dimension_name,
                        s.score_5 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_5_name IS NOT NULL
                    AND s.score_5 IS NOT NULL
                )
                SELECT
                    dimension_name,
                    AVG(score) as avg_score,
                    COUNT(*) as sample_count
                FROM dimension_scores
                GROUP BY dimension_name
                ORDER BY avg_score ASC
            
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.badcase_review_status = %(badcase_review_status_1)s) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 338.4s ago] {'classification': '其他'}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.9s ago] {'classification_1': ''}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 1173s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored', 'badcase_review_status_1': 'reviewed'}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT access_logs.id AS access_logs_id, access_logs.user_id AS access_logs_user_id, access_logs.username AS access_logs_username, access_logs.action AS access_logs_action, access_logs.ip_address AS access_logs_ip_address, access_logs.created_at AS access_logs_created_at 
FROM access_logs 
WHERE access_logs.action = %(action_1)s) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.badcase_review_status = %(badcase_review_status_1)s AND questions.is_badcase = false) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 340.8s ago] {'action_1': 'login'}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 1173s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored', 'badcase_review_status_1': 'reviewed'}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - 
                WITH dimension_scores AS (
                    -- 维度1的数据
                    SELECT
                        s.dimension_1_name as dimension_name,
                        s.score_1 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_1_name IS NOT NULL
                    AND s.score_1 IS NOT NULL

                    UNION ALL

                    -- 维度2的数据
                    SELECT
                        s.dimension_2_name as dimension_name,
                        s.score_2 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_2_name IS NOT NULL
                    AND s.score_2 IS NOT NULL

                    UNION ALL

                    -- 维度3的数据
                    SELECT
                        s.dimension_3_name as dimension_name,
                        s.score_3 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_3_name IS NOT NULL
                    AND s.score_3 IS NOT NULL

                    UNION ALL

                    -- 维度4的数据
                    SELECT
                        s.dimension_4_name as dimension_name,
                        s.score_4 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_4_name IS NOT NULL
                    AND s.score_4 IS NOT NULL

                    UNION ALL

                    -- 维度5的数据
                    SELECT
                        s.dimension_5_name as dimension_name,
                        s.score_5 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_5_name IS NOT NULL
                    AND s.score_5 IS NOT NULL
                )
                SELECT
                    dimension_name,
                    AVG(score) as avg_score,
                    COUNT(*) as sample_count
                FROM dimension_scores
                GROUP BY dimension_name
                ORDER BY avg_score ASC
            
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT access_logs.id AS access_logs_id, access_logs.user_id AS access_logs_user_id, access_logs.username AS access_logs_username, access_logs.action AS access_logs_action, access_logs.ip_address AS access_logs_ip_address, access_logs.created_at AS access_logs_created_at 
FROM access_logs 
WHERE access_logs.action = %(action_1)s AND access_logs.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 338.4s ago] {'classification': '经济问题'}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.9s ago] {'action_1': 'login', 'created_at_1': datetime.datetime(2025, 8, 18, 0, 0)}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.9s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 0, 0)}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.9s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0)}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.9s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': ''}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT coalesce(sum(least(anon_1.cnt, %(least_1)s)), %(coalesce_2)s) AS coalesce_1 
FROM (SELECT answers.question_business_id AS qbid, count(answers.id) AS cnt 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE questions.created_at >= %(created_at_1)s AND answers.created_at >= %(created_at_2)s AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s) AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s GROUP BY answers.question_business_id) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.9s ago] {'least_1': 2, 'coalesce_2': 0, 'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': '', 'assistant_type_1_1': 'doubao', 'assistant_type_1_2': 'xiaotian'}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT count(distinct(answers.question_business_id)) AS count_2 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND answers.is_scored = true AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s, %(assistant_type_1_3)s) GROUP BY answers.question_business_id 
HAVING count(distinct(answers.assistant_type)) = %(count_3)s) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.9s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': '', 'count_3': 3, 'assistant_type_1_1': 'yoyo', 'assistant_type_1_2': 'doubao', 'assistant_type_1_3': 'xiaotian'}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(distinct(questions.business_id)) AS count_1 
FROM questions JOIN answers ON questions.business_id = answers.question_business_id 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s) AND answers.created_at >= %(created_at_2)s
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.9s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': '', 'created_at_2': datetime.datetime(2025, 8, 18, 0, 0), 'assistant_type_1_1': 'doubao', 'assistant_type_1_2': 'xiaotian'}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.processing_status = %(processing_status_1)s AND questions.is_badcase = true) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.9s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'processing_status_1': 'scored'}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.processing_status = %(processing_status_1)s AND questions.badcase_review_status = %(badcase_review_status_1)s) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.9s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'processing_status_1': 'scored', 'badcase_review_status_1': 'reviewed'}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.9s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 2, 51, 56, 269630)}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.9s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 21, 51, 56, 269630)}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.updated_at >= %(updated_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.9s ago] {'updated_at_1': datetime.datetime(2025, 8, 19, 3, 21, 56, 269630), 'classification_1': ''}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.9s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 3, 21, 56, 269630)}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.updated_at >= %(updated_at_1)s AND answers.is_scored = true) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.9s ago] {'updated_at_1': datetime.datetime(2025, 8, 19, 3, 21, 56, 269630)}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT date_trunc(%(date_trunc_1)s, questions.created_at) AS day, count(questions.id) AS count 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s GROUP BY date_trunc(%(date_trunc_2)s, questions.created_at) ORDER BY day
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.9s ago] {'date_trunc_1': 'day', 'created_at_1': datetime.datetime(2025, 8, 12, 3, 51, 56, 283969), 'date_trunc_2': 'day'}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT date_trunc(%(date_trunc_1)s, questions.updated_at) AS day, count(questions.id) AS count 
FROM questions 
WHERE questions.updated_at >= %(updated_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND questions.processing_status IN (%(processing_status_1_1)s, %(processing_status_1_2)s, %(processing_status_1_3)s) GROUP BY date_trunc(%(date_trunc_2)s, questions.updated_at) ORDER BY day
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.9s ago] {'date_trunc_1': 'day', 'updated_at_1': datetime.datetime(2025, 8, 12, 3, 51, 56, 283969), 'classification_1': '', 'date_trunc_2': 'day', 'processing_status_1_1': 'classified', 'processing_status_1_2': 'answers_generated', 'processing_status_1_3': 'scored'}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT date_trunc(%(date_trunc_1)s, answers.created_at) AS day, count(answers.id) AS count 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE answers.created_at >= %(created_at_1)s AND questions.created_at >= %(created_at_2)s AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s) AND answers.is_scored = true AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s GROUP BY date_trunc(%(date_trunc_2)s, answers.created_at) ORDER BY day
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.9s ago] {'date_trunc_1': 'day', 'created_at_1': datetime.datetime(2025, 8, 12, 3, 51, 56, 283969), 'created_at_2': datetime.datetime(2025, 8, 12, 3, 51, 56, 283969), 'classification_1': '', 'date_trunc_2': 'day', 'assistant_type_1_1': 'doubao', 'assistant_type_1_2': 'xiaotian'}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT answers.assistant_type AS answers_assistant_type, avg(scores.score_1) AS avg_score_1, avg(scores.score_2) AS avg_score_2, avg(scores.score_3) AS avg_score_3, avg(scores.score_4) AS avg_score_4, avg(scores.score_5) AS avg_score_5, avg(scores.average_score) AS avg_total, count(scores.id) AS score_count 
FROM answers JOIN scores ON answers.id = scores.answer_id GROUP BY answers.assistant_type
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.8s ago] {}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT system_config.id AS system_config_id, system_config.config_key AS system_config_config_key, system_config.config_value AS system_config_config_value, system_config.config_type AS system_config_config_type, system_config.description AS system_config_description, system_config.effective_time AS system_config_effective_time, system_config.previous_value AS system_config_previous_value, system_config.status AS system_config_status, system_config.created_at AS system_config_created_at, system_config.updated_at AS system_config_updated_at 
FROM system_config 
WHERE system_config.config_key = %(config_key_1)s 
 LIMIT %(param_1)s
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 2676s ago] {'config_key_1': 'display.hot_categories_time_range', 'param_1': 1}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT questions.classification AS name, count(questions.id) AS count 
FROM questions 
WHERE questions.classification IS NOT NULL AND questions.classification != %(classification_1)s GROUP BY questions.classification
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.8s ago] {'classification_1': ''}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT questions.classification AS name, count(questions.id) AS count 
FROM questions 
WHERE questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND questions.created_at >= %(created_at_1)s GROUP BY questions.classification ORDER BY count(questions.id) DESC
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.8s ago] {'classification_1': '', 'created_at_1': datetime.datetime(2025, 8, 12, 3, 51, 56, 290499)}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions ORDER BY questions.created_at DESC 
 LIMIT %(param_1)s
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.8s ago] {'param_1': 5}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers ORDER BY answers.created_at DESC 
 LIMIT %(param_1)s
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.8s ago] {'param_1': 5}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT scores.id AS scores_id, scores.answer_id AS scores_answer_id, scores.score_1 AS scores_score_1, scores.score_2 AS scores_score_2, scores.score_3 AS scores_score_3, scores.score_4 AS scores_score_4, scores.score_5 AS scores_score_5, scores.dimension_1_name AS scores_dimension_1_name, scores.dimension_2_name AS scores_dimension_2_name, scores.dimension_3_name AS scores_dimension_3_name, scores.dimension_4_name AS scores_dimension_4_name, scores.dimension_5_name AS scores_dimension_5_name, scores.average_score AS scores_average_score, scores.comment AS scores_comment, scores.rated_at AS scores_rated_at 
FROM scores ORDER BY scores.rated_at DESC 
 LIMIT %(param_1)s
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.8s ago] {'param_1': 5}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.9s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 3, 46, 56, 293918)}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.8s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 3, 46, 56, 293918)}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT scores.id AS scores_id, scores.answer_id AS scores_answer_id, scores.score_1 AS scores_score_1, scores.score_2 AS scores_score_2, scores.score_3 AS scores_score_3, scores.score_4 AS scores_score_4, scores.score_5 AS scores_score_5, scores.dimension_1_name AS scores_dimension_1_name, scores.dimension_2_name AS scores_dimension_2_name, scores.dimension_3_name AS scores_dimension_3_name, scores.dimension_4_name AS scores_dimension_4_name, scores.dimension_5_name AS scores_dimension_5_name, scores.average_score AS scores_average_score, scores.comment AS scores_comment, scores.rated_at AS scores_rated_at 
FROM scores 
WHERE scores.rated_at >= %(rated_at_1)s) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.8s ago] {'rated_at_1': datetime.datetime(2025, 8, 19, 3, 46, 56, 293918)}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.assistant_type = %(assistant_type_1)s AND answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.8s ago] {'assistant_type_1': 'yoyo', 'created_at_1': datetime.datetime(2025, 8, 19, 3, 46, 56, 293918)}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.assistant_type = %(assistant_type_1)s AND answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.8s ago] {'assistant_type_1': 'doubao', 'created_at_1': datetime.datetime(2025, 8, 19, 3, 46, 56, 293918)}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.assistant_type = %(assistant_type_1)s AND answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - [cached since 337.8s ago] {'assistant_type_1': 'xiaotian', 'created_at_1': datetime.datetime(2025, 8, 19, 3, 46, 56, 293918)}
2025-08-19 11:51:56 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s) AS anon_1
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT questions.classification AS questions_classification, count(questions.id) AS badcase_count 
FROM questions 
WHERE questions.is_badcase = true GROUP BY questions.classification ORDER BY count(questions.id) DESC 
 LIMIT %(param_1)s
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 1203s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored'}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 368.2s ago] {'param_1': 3}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.is_badcase = true) AS anon_1
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - 
                WITH dimension_scores AS (
                    -- 维度1的数据
                    SELECT
                        s.dimension_1_name as dimension_name,
                        s.score_1 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_1_name IS NOT NULL
                    AND s.score_1 IS NOT NULL

                    UNION ALL

                    -- 维度2的数据
                    SELECT
                        s.dimension_2_name as dimension_name,
                        s.score_2 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_2_name IS NOT NULL
                    AND s.score_2 IS NOT NULL

                    UNION ALL

                    -- 维度3的数据
                    SELECT
                        s.dimension_3_name as dimension_name,
                        s.score_3 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_3_name IS NOT NULL
                    AND s.score_3 IS NOT NULL

                    UNION ALL

                    -- 维度4的数据
                    SELECT
                        s.dimension_4_name as dimension_name,
                        s.score_4 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_4_name IS NOT NULL
                    AND s.score_4 IS NOT NULL

                    UNION ALL

                    -- 维度5的数据
                    SELECT
                        s.dimension_5_name as dimension_name,
                        s.score_5 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_5_name IS NOT NULL
                    AND s.score_5 IS NOT NULL
                )
                SELECT
                    dimension_name,
                    AVG(score) as avg_score,
                    COUNT(*) as sample_count
                FROM dimension_scores
                GROUP BY dimension_name
                ORDER BY avg_score ASC
            
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 1203s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored'}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 368.2s ago] {'classification': '产品使用'}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.is_badcase = true AND questions.badcase_review_status = %(badcase_review_status_1)s) AS anon_1
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 1203s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored', 'badcase_review_status_1': 'pending'}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.badcase_review_status = %(badcase_review_status_1)s) AS anon_1
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 1203s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored', 'badcase_review_status_1': 'reviewed'}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - 
                WITH dimension_scores AS (
                    -- 维度1的数据
                    SELECT
                        s.dimension_1_name as dimension_name,
                        s.score_1 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_1_name IS NOT NULL
                    AND s.score_1 IS NOT NULL

                    UNION ALL

                    -- 维度2的数据
                    SELECT
                        s.dimension_2_name as dimension_name,
                        s.score_2 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_2_name IS NOT NULL
                    AND s.score_2 IS NOT NULL

                    UNION ALL

                    -- 维度3的数据
                    SELECT
                        s.dimension_3_name as dimension_name,
                        s.score_3 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_3_name IS NOT NULL
                    AND s.score_3 IS NOT NULL

                    UNION ALL

                    -- 维度4的数据
                    SELECT
                        s.dimension_4_name as dimension_name,
                        s.score_4 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_4_name IS NOT NULL
                    AND s.score_4 IS NOT NULL

                    UNION ALL

                    -- 维度5的数据
                    SELECT
                        s.dimension_5_name as dimension_name,
                        s.score_5 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_5_name IS NOT NULL
                    AND s.score_5 IS NOT NULL
                )
                SELECT
                    dimension_name,
                    AVG(score) as avg_score,
                    COUNT(*) as sample_count
                FROM dimension_scores
                GROUP BY dimension_name
                ORDER BY avg_score ASC
            
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.badcase_review_status = %(badcase_review_status_1)s AND questions.is_badcase = false) AS anon_1
2025-08-19 11:52:26 - app.api.word_analysis_api - INFO - 获取词云数据请求: time_range=week, limit=40
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 368.2s ago] {'classification': '其他'}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 1203s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored', 'badcase_review_status_1': 'reviewed'}
2025-08-19 11:52:26 - app.api.word_analysis_api - INFO - 获取词云数据请求: time_range=week, limit=40
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions) AS anon_1
2025-08-19 11:52:26 - app.services.word_analysis_service - INFO - 开始获取热词分析数据，时间范围: week, 限制: 40
2025-08-19 11:52:26 - app.services.word_analysis_service - INFO - 开始获取热词分析数据，时间范围: week, 限制: 40
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 1263s ago] {}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.query IS NOT NULL AND questions.query != %(query_1)s AND questions.is_deleted = false
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 368.2s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'query_1': ''}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - 
                WITH dimension_scores AS (
                    -- 维度1的数据
                    SELECT
                        s.dimension_1_name as dimension_name,
                        s.score_1 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_1_name IS NOT NULL
                    AND s.score_1 IS NOT NULL

                    UNION ALL

                    -- 维度2的数据
                    SELECT
                        s.dimension_2_name as dimension_name,
                        s.score_2 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_2_name IS NOT NULL
                    AND s.score_2 IS NOT NULL

                    UNION ALL

                    -- 维度3的数据
                    SELECT
                        s.dimension_3_name as dimension_name,
                        s.score_3 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_3_name IS NOT NULL
                    AND s.score_3 IS NOT NULL

                    UNION ALL

                    -- 维度4的数据
                    SELECT
                        s.dimension_4_name as dimension_name,
                        s.score_4 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_4_name IS NOT NULL
                    AND s.score_4 IS NOT NULL

                    UNION ALL

                    -- 维度5的数据
                    SELECT
                        s.dimension_5_name as dimension_name,
                        s.score_5 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_5_name IS NOT NULL
                    AND s.score_5 IS NOT NULL
                )
                SELECT
                    dimension_name,
                    AVG(score) as avg_score,
                    COUNT(*) as sample_count
                FROM dimension_scores
                GROUP BY dimension_name
                ORDER BY avg_score ASC
            
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 368.2s ago] {'classification': '经济问题'}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0)}
2025-08-19 11:52:26 - app.services.word_analysis_service - INFO - 查询到 103 个问题，时间范围: 2025-08-18 00:00:00 至 2025-08-24 23:59:59.999999
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:52:26 - app.services.word_analysis_service - INFO - 查询到 103 个问题，时间范围: 2025-08-18 00:00:00 至 2025-08-24 23:59:59.999999
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:52:26 - app.services.word_analysis_service - INFO - 问题样本 1: 价格是多少？...
2025-08-19 11:52:26 - app.services.word_analysis_service - INFO - 问题样本 1: 价格是多少？...
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': ''}
2025-08-19 11:52:26 - app.services.word_analysis_service - INFO - 问题样本 2: 合作相关的要求？...
2025-08-19 11:52:26 - app.services.word_analysis_service - INFO - 问题样本 2: 合作相关的要求？...
2025-08-19 11:52:26 - app.services.word_analysis_service - INFO - 问题样本 3: 培训服务相关的政策？...
2025-08-19 11:52:26 - app.services.word_analysis_service - INFO - 问题样本 3: 培训服务相关的政策？...
2025-08-19 11:52:26 - app.services.word_analysis_service - INFO - 有效问题文本数: 103, 总文本长度: 1170
2025-08-19 11:52:26 - app.services.word_analysis_service - INFO - 有效问题文本数: 103, 总文本长度: 1170
2025-08-19 11:52:26 - app.services.word_analysis_service - INFO - 文本分析完成，原始词汇: 703, 过滤后: 261, 唯一词汇: 54
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:52:26 - app.services.word_analysis_service - INFO - 文本分析完成，原始词汇: 703, 过滤后: 261, 唯一词汇: 54
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'classification_1': ''}
2025-08-19 11:52:26 - app.services.word_analysis_service - INFO - 热词分析完成，共分析 103 个问题，生成 40 个热词
2025-08-19 11:52:26 - app.services.word_analysis_service - INFO - 热词分析完成，共分析 103 个问题，生成 40 个热词
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT access_logs.id AS access_logs_id, access_logs.user_id AS access_logs_user_id, access_logs.username AS access_logs_username, access_logs.action AS access_logs_action, access_logs.ip_address AS access_logs_ip_address, access_logs.created_at AS access_logs_created_at 
FROM access_logs 
WHERE access_logs.action = %(action_1)s) AS anon_1
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 370.6s ago] {'action_1': 'login'}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT access_logs.id AS access_logs_id, access_logs.user_id AS access_logs_user_id, access_logs.username AS access_logs_username, access_logs.action AS access_logs_action, access_logs.ip_address AS access_logs_ip_address, access_logs.created_at AS access_logs_created_at 
FROM access_logs 
WHERE access_logs.action = %(action_1)s AND access_logs.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'action_1': 'login', 'created_at_1': datetime.datetime(2025, 8, 18, 0, 0)}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 0, 0)}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0)}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': ''}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT coalesce(sum(least(anon_1.cnt, %(least_1)s)), %(coalesce_2)s) AS coalesce_1 
FROM (SELECT answers.question_business_id AS qbid, count(answers.id) AS cnt 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE questions.created_at >= %(created_at_1)s AND answers.created_at >= %(created_at_2)s AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s) AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s GROUP BY answers.question_business_id) AS anon_1
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'least_1': 2, 'coalesce_2': 0, 'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': '', 'assistant_type_1_1': 'doubao', 'assistant_type_1_2': 'xiaotian'}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT count(distinct(answers.question_business_id)) AS count_2 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND answers.is_scored = true AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s, %(assistant_type_1_3)s) GROUP BY answers.question_business_id 
HAVING count(distinct(answers.assistant_type)) = %(count_3)s) AS anon_1
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': '', 'count_3': 3, 'assistant_type_1_1': 'yoyo', 'assistant_type_1_2': 'doubao', 'assistant_type_1_3': 'xiaotian'}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(distinct(questions.business_id)) AS count_1 
FROM questions JOIN answers ON questions.business_id = answers.question_business_id 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s) AND answers.created_at >= %(created_at_2)s
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': '', 'created_at_2': datetime.datetime(2025, 8, 18, 0, 0), 'assistant_type_1_1': 'doubao', 'assistant_type_1_2': 'xiaotian'}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.processing_status = %(processing_status_1)s AND questions.is_badcase = true) AS anon_1
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'processing_status_1': 'scored'}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.processing_status = %(processing_status_1)s AND questions.badcase_review_status = %(badcase_review_status_1)s) AS anon_1
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'processing_status_1': 'scored', 'badcase_review_status_1': 'reviewed'}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.8s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 2, 52, 26, 137934)}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.8s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 21, 52, 26, 137934)}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.updated_at >= %(updated_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'updated_at_1': datetime.datetime(2025, 8, 19, 3, 22, 26, 137934), 'classification_1': ''}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 3, 22, 26, 137934)}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.updated_at >= %(updated_at_1)s AND answers.is_scored = true) AS anon_1
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'updated_at_1': datetime.datetime(2025, 8, 19, 3, 22, 26, 137934)}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT date_trunc(%(date_trunc_1)s, questions.created_at) AS day, count(questions.id) AS count 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s GROUP BY date_trunc(%(date_trunc_2)s, questions.created_at) ORDER BY day
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'date_trunc_1': 'day', 'created_at_1': datetime.datetime(2025, 8, 12, 3, 52, 26, 152340), 'date_trunc_2': 'day'}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT date_trunc(%(date_trunc_1)s, questions.updated_at) AS day, count(questions.id) AS count 
FROM questions 
WHERE questions.updated_at >= %(updated_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND questions.processing_status IN (%(processing_status_1_1)s, %(processing_status_1_2)s, %(processing_status_1_3)s) GROUP BY date_trunc(%(date_trunc_2)s, questions.updated_at) ORDER BY day
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'date_trunc_1': 'day', 'updated_at_1': datetime.datetime(2025, 8, 12, 3, 52, 26, 152340), 'classification_1': '', 'date_trunc_2': 'day', 'processing_status_1_1': 'classified', 'processing_status_1_2': 'answers_generated', 'processing_status_1_3': 'scored'}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT date_trunc(%(date_trunc_1)s, answers.created_at) AS day, count(answers.id) AS count 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE answers.created_at >= %(created_at_1)s AND questions.created_at >= %(created_at_2)s AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s) AND answers.is_scored = true AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s GROUP BY date_trunc(%(date_trunc_2)s, answers.created_at) ORDER BY day
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'date_trunc_1': 'day', 'created_at_1': datetime.datetime(2025, 8, 12, 3, 52, 26, 152340), 'created_at_2': datetime.datetime(2025, 8, 12, 3, 52, 26, 152340), 'classification_1': '', 'date_trunc_2': 'day', 'assistant_type_1_1': 'doubao', 'assistant_type_1_2': 'xiaotian'}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT answers.assistant_type AS answers_assistant_type, avg(scores.score_1) AS avg_score_1, avg(scores.score_2) AS avg_score_2, avg(scores.score_3) AS avg_score_3, avg(scores.score_4) AS avg_score_4, avg(scores.score_5) AS avg_score_5, avg(scores.average_score) AS avg_total, count(scores.id) AS score_count 
FROM answers JOIN scores ON answers.id = scores.answer_id GROUP BY answers.assistant_type
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT system_config.id AS system_config_id, system_config.config_key AS system_config_config_key, system_config.config_value AS system_config_config_value, system_config.config_type AS system_config_config_type, system_config.description AS system_config_description, system_config.effective_time AS system_config_effective_time, system_config.previous_value AS system_config_previous_value, system_config.status AS system_config_status, system_config.created_at AS system_config_created_at, system_config.updated_at AS system_config_updated_at 
FROM system_config 
WHERE system_config.config_key = %(config_key_1)s 
 LIMIT %(param_1)s
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 2706s ago] {'config_key_1': 'display.hot_categories_time_range', 'param_1': 1}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT questions.classification AS name, count(questions.id) AS count 
FROM questions 
WHERE questions.classification IS NOT NULL AND questions.classification != %(classification_1)s GROUP BY questions.classification
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'classification_1': ''}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT questions.classification AS name, count(questions.id) AS count 
FROM questions 
WHERE questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND questions.created_at >= %(created_at_1)s GROUP BY questions.classification ORDER BY count(questions.id) DESC
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'classification_1': '', 'created_at_1': datetime.datetime(2025, 8, 12, 3, 52, 26, 158991)}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions ORDER BY questions.created_at DESC 
 LIMIT %(param_1)s
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'param_1': 5}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers ORDER BY answers.created_at DESC 
 LIMIT %(param_1)s
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'param_1': 5}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT scores.id AS scores_id, scores.answer_id AS scores_answer_id, scores.score_1 AS scores_score_1, scores.score_2 AS scores_score_2, scores.score_3 AS scores_score_3, scores.score_4 AS scores_score_4, scores.score_5 AS scores_score_5, scores.dimension_1_name AS scores_dimension_1_name, scores.dimension_2_name AS scores_dimension_2_name, scores.dimension_3_name AS scores_dimension_3_name, scores.dimension_4_name AS scores_dimension_4_name, scores.dimension_5_name AS scores_dimension_5_name, scores.average_score AS scores_average_score, scores.comment AS scores_comment, scores.rated_at AS scores_rated_at 
FROM scores ORDER BY scores.rated_at DESC 
 LIMIT %(param_1)s
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'param_1': 5}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.8s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 3, 47, 26, 162336)}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 3, 47, 26, 162336)}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT scores.id AS scores_id, scores.answer_id AS scores_answer_id, scores.score_1 AS scores_score_1, scores.score_2 AS scores_score_2, scores.score_3 AS scores_score_3, scores.score_4 AS scores_score_4, scores.score_5 AS scores_score_5, scores.dimension_1_name AS scores_dimension_1_name, scores.dimension_2_name AS scores_dimension_2_name, scores.dimension_3_name AS scores_dimension_3_name, scores.dimension_4_name AS scores_dimension_4_name, scores.dimension_5_name AS scores_dimension_5_name, scores.average_score AS scores_average_score, scores.comment AS scores_comment, scores.rated_at AS scores_rated_at 
FROM scores 
WHERE scores.rated_at >= %(rated_at_1)s) AS anon_1
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'rated_at_1': datetime.datetime(2025, 8, 19, 3, 47, 26, 162336)}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.assistant_type = %(assistant_type_1)s AND answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'assistant_type_1': 'yoyo', 'created_at_1': datetime.datetime(2025, 8, 19, 3, 47, 26, 162336)}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.assistant_type = %(assistant_type_1)s AND answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'assistant_type_1': 'doubao', 'created_at_1': datetime.datetime(2025, 8, 19, 3, 47, 26, 162336)}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.assistant_type = %(assistant_type_1)s AND answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - [cached since 367.7s ago] {'assistant_type_1': 'xiaotian', 'created_at_1': datetime.datetime(2025, 8, 19, 3, 47, 26, 162336)}
2025-08-19 11:52:26 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT questions.classification AS questions_classification, count(questions.id) AS badcase_count 
FROM questions 
WHERE questions.is_badcase = true GROUP BY questions.classification ORDER BY count(questions.id) DESC 
 LIMIT %(param_1)s
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 1233s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored'}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 398.2s ago] {'param_1': 3}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 1293s ago] {}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.is_badcase = true) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - 
                WITH dimension_scores AS (
                    -- 维度1的数据
                    SELECT
                        s.dimension_1_name as dimension_name,
                        s.score_1 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_1_name IS NOT NULL
                    AND s.score_1 IS NOT NULL

                    UNION ALL

                    -- 维度2的数据
                    SELECT
                        s.dimension_2_name as dimension_name,
                        s.score_2 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_2_name IS NOT NULL
                    AND s.score_2 IS NOT NULL

                    UNION ALL

                    -- 维度3的数据
                    SELECT
                        s.dimension_3_name as dimension_name,
                        s.score_3 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_3_name IS NOT NULL
                    AND s.score_3 IS NOT NULL

                    UNION ALL

                    -- 维度4的数据
                    SELECT
                        s.dimension_4_name as dimension_name,
                        s.score_4 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_4_name IS NOT NULL
                    AND s.score_4 IS NOT NULL

                    UNION ALL

                    -- 维度5的数据
                    SELECT
                        s.dimension_5_name as dimension_name,
                        s.score_5 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_5_name IS NOT NULL
                    AND s.score_5 IS NOT NULL
                )
                SELECT
                    dimension_name,
                    AVG(score) as avg_score,
                    COUNT(*) as sample_count
                FROM dimension_scores
                GROUP BY dimension_name
                ORDER BY avg_score ASC
            
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 1233s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored'}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 398.2s ago] {'classification': '产品使用'}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0)}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.is_badcase = true AND questions.badcase_review_status = %(badcase_review_status_1)s) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 1233s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored', 'badcase_review_status_1': 'pending'}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': ''}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - 
                WITH dimension_scores AS (
                    -- 维度1的数据
                    SELECT
                        s.dimension_1_name as dimension_name,
                        s.score_1 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_1_name IS NOT NULL
                    AND s.score_1 IS NOT NULL

                    UNION ALL

                    -- 维度2的数据
                    SELECT
                        s.dimension_2_name as dimension_name,
                        s.score_2 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_2_name IS NOT NULL
                    AND s.score_2 IS NOT NULL

                    UNION ALL

                    -- 维度3的数据
                    SELECT
                        s.dimension_3_name as dimension_name,
                        s.score_3 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_3_name IS NOT NULL
                    AND s.score_3 IS NOT NULL

                    UNION ALL

                    -- 维度4的数据
                    SELECT
                        s.dimension_4_name as dimension_name,
                        s.score_4 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_4_name IS NOT NULL
                    AND s.score_4 IS NOT NULL

                    UNION ALL

                    -- 维度5的数据
                    SELECT
                        s.dimension_5_name as dimension_name,
                        s.score_5 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_5_name IS NOT NULL
                    AND s.score_5 IS NOT NULL
                )
                SELECT
                    dimension_name,
                    AVG(score) as avg_score,
                    COUNT(*) as sample_count
                FROM dimension_scores
                GROUP BY dimension_name
                ORDER BY avg_score ASC
            
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.badcase_review_status = %(badcase_review_status_1)s) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 398.2s ago] {'classification': '其他'}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 1233s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored', 'badcase_review_status_1': 'reviewed'}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'classification_1': ''}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT access_logs.id AS access_logs_id, access_logs.user_id AS access_logs_user_id, access_logs.username AS access_logs_username, access_logs.action AS access_logs_action, access_logs.ip_address AS access_logs_ip_address, access_logs.created_at AS access_logs_created_at 
FROM access_logs 
WHERE access_logs.action = %(action_1)s) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.badcase_review_status = %(badcase_review_status_1)s AND questions.is_badcase = false) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 400.6s ago] {'action_1': 'login'}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 1233s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored', 'badcase_review_status_1': 'reviewed'}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - 
                WITH dimension_scores AS (
                    -- 维度1的数据
                    SELECT
                        s.dimension_1_name as dimension_name,
                        s.score_1 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_1_name IS NOT NULL
                    AND s.score_1 IS NOT NULL

                    UNION ALL

                    -- 维度2的数据
                    SELECT
                        s.dimension_2_name as dimension_name,
                        s.score_2 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_2_name IS NOT NULL
                    AND s.score_2 IS NOT NULL

                    UNION ALL

                    -- 维度3的数据
                    SELECT
                        s.dimension_3_name as dimension_name,
                        s.score_3 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_3_name IS NOT NULL
                    AND s.score_3 IS NOT NULL

                    UNION ALL

                    -- 维度4的数据
                    SELECT
                        s.dimension_4_name as dimension_name,
                        s.score_4 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_4_name IS NOT NULL
                    AND s.score_4 IS NOT NULL

                    UNION ALL

                    -- 维度5的数据
                    SELECT
                        s.dimension_5_name as dimension_name,
                        s.score_5 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_5_name IS NOT NULL
                    AND s.score_5 IS NOT NULL
                )
                SELECT
                    dimension_name,
                    AVG(score) as avg_score,
                    COUNT(*) as sample_count
                FROM dimension_scores
                GROUP BY dimension_name
                ORDER BY avg_score ASC
            
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT access_logs.id AS access_logs_id, access_logs.user_id AS access_logs_user_id, access_logs.username AS access_logs_username, access_logs.action AS access_logs_action, access_logs.ip_address AS access_logs_ip_address, access_logs.created_at AS access_logs_created_at 
FROM access_logs 
WHERE access_logs.action = %(action_1)s AND access_logs.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 398.2s ago] {'classification': '经济问题'}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'action_1': 'login', 'created_at_1': datetime.datetime(2025, 8, 18, 0, 0)}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 0, 0)}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0)}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': ''}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT coalesce(sum(least(anon_1.cnt, %(least_1)s)), %(coalesce_2)s) AS coalesce_1 
FROM (SELECT answers.question_business_id AS qbid, count(answers.id) AS cnt 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE questions.created_at >= %(created_at_1)s AND answers.created_at >= %(created_at_2)s AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s) AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s GROUP BY answers.question_business_id) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'least_1': 2, 'coalesce_2': 0, 'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': '', 'assistant_type_1_1': 'doubao', 'assistant_type_1_2': 'xiaotian'}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT count(distinct(answers.question_business_id)) AS count_2 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND answers.is_scored = true AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s, %(assistant_type_1_3)s) GROUP BY answers.question_business_id 
HAVING count(distinct(answers.assistant_type)) = %(count_3)s) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': '', 'count_3': 3, 'assistant_type_1_1': 'yoyo', 'assistant_type_1_2': 'doubao', 'assistant_type_1_3': 'xiaotian'}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(distinct(questions.business_id)) AS count_1 
FROM questions JOIN answers ON questions.business_id = answers.question_business_id 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s) AND answers.created_at >= %(created_at_2)s
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': '', 'created_at_2': datetime.datetime(2025, 8, 18, 0, 0), 'assistant_type_1_1': 'doubao', 'assistant_type_1_2': 'xiaotian'}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.processing_status = %(processing_status_1)s AND questions.is_badcase = true) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'processing_status_1': 'scored'}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.processing_status = %(processing_status_1)s AND questions.badcase_review_status = %(badcase_review_status_1)s) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'processing_status_1': 'scored', 'badcase_review_status_1': 'reviewed'}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.8s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 2, 52, 56, 138747)}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.8s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 21, 52, 56, 138747)}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.updated_at >= %(updated_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'updated_at_1': datetime.datetime(2025, 8, 19, 3, 22, 56, 138747), 'classification_1': ''}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 3, 22, 56, 138747)}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.updated_at >= %(updated_at_1)s AND answers.is_scored = true) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'updated_at_1': datetime.datetime(2025, 8, 19, 3, 22, 56, 138747)}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT date_trunc(%(date_trunc_1)s, questions.created_at) AS day, count(questions.id) AS count 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s GROUP BY date_trunc(%(date_trunc_2)s, questions.created_at) ORDER BY day
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'date_trunc_1': 'day', 'created_at_1': datetime.datetime(2025, 8, 12, 3, 52, 56, 152451), 'date_trunc_2': 'day'}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT date_trunc(%(date_trunc_1)s, questions.updated_at) AS day, count(questions.id) AS count 
FROM questions 
WHERE questions.updated_at >= %(updated_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND questions.processing_status IN (%(processing_status_1_1)s, %(processing_status_1_2)s, %(processing_status_1_3)s) GROUP BY date_trunc(%(date_trunc_2)s, questions.updated_at) ORDER BY day
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'date_trunc_1': 'day', 'updated_at_1': datetime.datetime(2025, 8, 12, 3, 52, 56, 152451), 'classification_1': '', 'date_trunc_2': 'day', 'processing_status_1_1': 'classified', 'processing_status_1_2': 'answers_generated', 'processing_status_1_3': 'scored'}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT date_trunc(%(date_trunc_1)s, answers.created_at) AS day, count(answers.id) AS count 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE answers.created_at >= %(created_at_1)s AND questions.created_at >= %(created_at_2)s AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s) AND answers.is_scored = true AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s GROUP BY date_trunc(%(date_trunc_2)s, answers.created_at) ORDER BY day
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'date_trunc_1': 'day', 'created_at_1': datetime.datetime(2025, 8, 12, 3, 52, 56, 152451), 'created_at_2': datetime.datetime(2025, 8, 12, 3, 52, 56, 152451), 'classification_1': '', 'date_trunc_2': 'day', 'assistant_type_1_1': 'doubao', 'assistant_type_1_2': 'xiaotian'}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT answers.assistant_type AS answers_assistant_type, avg(scores.score_1) AS avg_score_1, avg(scores.score_2) AS avg_score_2, avg(scores.score_3) AS avg_score_3, avg(scores.score_4) AS avg_score_4, avg(scores.score_5) AS avg_score_5, avg(scores.average_score) AS avg_total, count(scores.id) AS score_count 
FROM answers JOIN scores ON answers.id = scores.answer_id GROUP BY answers.assistant_type
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT system_config.id AS system_config_id, system_config.config_key AS system_config_config_key, system_config.config_value AS system_config_config_value, system_config.config_type AS system_config_config_type, system_config.description AS system_config_description, system_config.effective_time AS system_config_effective_time, system_config.previous_value AS system_config_previous_value, system_config.status AS system_config_status, system_config.created_at AS system_config_created_at, system_config.updated_at AS system_config_updated_at 
FROM system_config 
WHERE system_config.config_key = %(config_key_1)s 
 LIMIT %(param_1)s
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 2736s ago] {'config_key_1': 'display.hot_categories_time_range', 'param_1': 1}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT questions.classification AS name, count(questions.id) AS count 
FROM questions 
WHERE questions.classification IS NOT NULL AND questions.classification != %(classification_1)s GROUP BY questions.classification
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'classification_1': ''}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT questions.classification AS name, count(questions.id) AS count 
FROM questions 
WHERE questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND questions.created_at >= %(created_at_1)s GROUP BY questions.classification ORDER BY count(questions.id) DESC
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'classification_1': '', 'created_at_1': datetime.datetime(2025, 8, 12, 3, 52, 56, 159634)}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions ORDER BY questions.created_at DESC 
 LIMIT %(param_1)s
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'param_1': 5}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers ORDER BY answers.created_at DESC 
 LIMIT %(param_1)s
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'param_1': 5}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT scores.id AS scores_id, scores.answer_id AS scores_answer_id, scores.score_1 AS scores_score_1, scores.score_2 AS scores_score_2, scores.score_3 AS scores_score_3, scores.score_4 AS scores_score_4, scores.score_5 AS scores_score_5, scores.dimension_1_name AS scores_dimension_1_name, scores.dimension_2_name AS scores_dimension_2_name, scores.dimension_3_name AS scores_dimension_3_name, scores.dimension_4_name AS scores_dimension_4_name, scores.dimension_5_name AS scores_dimension_5_name, scores.average_score AS scores_average_score, scores.comment AS scores_comment, scores.rated_at AS scores_rated_at 
FROM scores ORDER BY scores.rated_at DESC 
 LIMIT %(param_1)s
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'param_1': 5}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.8s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 3, 47, 56, 164106)}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 3, 47, 56, 164106)}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT scores.id AS scores_id, scores.answer_id AS scores_answer_id, scores.score_1 AS scores_score_1, scores.score_2 AS scores_score_2, scores.score_3 AS scores_score_3, scores.score_4 AS scores_score_4, scores.score_5 AS scores_score_5, scores.dimension_1_name AS scores_dimension_1_name, scores.dimension_2_name AS scores_dimension_2_name, scores.dimension_3_name AS scores_dimension_3_name, scores.dimension_4_name AS scores_dimension_4_name, scores.dimension_5_name AS scores_dimension_5_name, scores.average_score AS scores_average_score, scores.comment AS scores_comment, scores.rated_at AS scores_rated_at 
FROM scores 
WHERE scores.rated_at >= %(rated_at_1)s) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'rated_at_1': datetime.datetime(2025, 8, 19, 3, 47, 56, 164106)}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.assistant_type = %(assistant_type_1)s AND answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'assistant_type_1': 'yoyo', 'created_at_1': datetime.datetime(2025, 8, 19, 3, 47, 56, 164106)}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.assistant_type = %(assistant_type_1)s AND answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'assistant_type_1': 'doubao', 'created_at_1': datetime.datetime(2025, 8, 19, 3, 47, 56, 164106)}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.assistant_type = %(assistant_type_1)s AND answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - [cached since 397.7s ago] {'assistant_type_1': 'xiaotian', 'created_at_1': datetime.datetime(2025, 8, 19, 3, 47, 56, 164106)}
2025-08-19 11:52:56 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:53:26 - app.api.word_analysis_api - INFO - 获取词云数据请求: time_range=week, limit=40
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT questions.classification AS questions_classification, count(questions.id) AS badcase_count 
FROM questions 
WHERE questions.is_badcase = true GROUP BY questions.classification ORDER BY count(questions.id) DESC 
 LIMIT %(param_1)s
2025-08-19 11:53:26 - app.api.word_analysis_api - INFO - 获取词云数据请求: time_range=week, limit=40
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 1263s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored'}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 428.2s ago] {'param_1': 3}
2025-08-19 11:53:26 - app.services.word_analysis_service - INFO - 开始获取热词分析数据，时间范围: week, 限制: 40
2025-08-19 11:53:26 - app.services.word_analysis_service - INFO - 开始获取热词分析数据，时间范围: week, 限制: 40
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 1323s ago] {}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.is_badcase = true) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - 
                WITH dimension_scores AS (
                    -- 维度1的数据
                    SELECT
                        s.dimension_1_name as dimension_name,
                        s.score_1 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_1_name IS NOT NULL
                    AND s.score_1 IS NOT NULL

                    UNION ALL

                    -- 维度2的数据
                    SELECT
                        s.dimension_2_name as dimension_name,
                        s.score_2 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_2_name IS NOT NULL
                    AND s.score_2 IS NOT NULL

                    UNION ALL

                    -- 维度3的数据
                    SELECT
                        s.dimension_3_name as dimension_name,
                        s.score_3 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_3_name IS NOT NULL
                    AND s.score_3 IS NOT NULL

                    UNION ALL

                    -- 维度4的数据
                    SELECT
                        s.dimension_4_name as dimension_name,
                        s.score_4 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_4_name IS NOT NULL
                    AND s.score_4 IS NOT NULL

                    UNION ALL

                    -- 维度5的数据
                    SELECT
                        s.dimension_5_name as dimension_name,
                        s.score_5 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_5_name IS NOT NULL
                    AND s.score_5 IS NOT NULL
                )
                SELECT
                    dimension_name,
                    AVG(score) as avg_score,
                    COUNT(*) as sample_count
                FROM dimension_scores
                GROUP BY dimension_name
                ORDER BY avg_score ASC
            
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.query IS NOT NULL AND questions.query != %(query_1)s AND questions.is_deleted = false
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 1263s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored'}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 428.2s ago] {'classification': '产品使用'}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 428.2s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'query_1': ''}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0)}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.is_badcase = true AND questions.badcase_review_status = %(badcase_review_status_1)s) AS anon_1
2025-08-19 11:53:26 - app.services.word_analysis_service - INFO - 查询到 103 个问题，时间范围: 2025-08-18 00:00:00 至 2025-08-24 23:59:59.999999
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - 
                WITH dimension_scores AS (
                    -- 维度1的数据
                    SELECT
                        s.dimension_1_name as dimension_name,
                        s.score_1 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_1_name IS NOT NULL
                    AND s.score_1 IS NOT NULL

                    UNION ALL

                    -- 维度2的数据
                    SELECT
                        s.dimension_2_name as dimension_name,
                        s.score_2 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_2_name IS NOT NULL
                    AND s.score_2 IS NOT NULL

                    UNION ALL

                    -- 维度3的数据
                    SELECT
                        s.dimension_3_name as dimension_name,
                        s.score_3 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_3_name IS NOT NULL
                    AND s.score_3 IS NOT NULL

                    UNION ALL

                    -- 维度4的数据
                    SELECT
                        s.dimension_4_name as dimension_name,
                        s.score_4 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_4_name IS NOT NULL
                    AND s.score_4 IS NOT NULL

                    UNION ALL

                    -- 维度5的数据
                    SELECT
                        s.dimension_5_name as dimension_name,
                        s.score_5 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_5_name IS NOT NULL
                    AND s.score_5 IS NOT NULL
                )
                SELECT
                    dimension_name,
                    AVG(score) as avg_score,
                    COUNT(*) as sample_count
                FROM dimension_scores
                GROUP BY dimension_name
                ORDER BY avg_score ASC
            
2025-08-19 11:53:26 - app.services.word_analysis_service - INFO - 查询到 103 个问题，时间范围: 2025-08-18 00:00:00 至 2025-08-24 23:59:59.999999
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 1263s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored', 'badcase_review_status_1': 'pending'}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': ''}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 428.2s ago] {'classification': '其他'}
2025-08-19 11:53:26 - app.services.word_analysis_service - INFO - 问题样本 1: 价格是多少？...
2025-08-19 11:53:26 - app.services.word_analysis_service - INFO - 问题样本 1: 价格是多少？...
2025-08-19 11:53:26 - app.services.word_analysis_service - INFO - 问题样本 2: 合作相关的要求？...
2025-08-19 11:53:26 - app.services.word_analysis_service - INFO - 问题样本 2: 合作相关的要求？...
2025-08-19 11:53:26 - app.services.word_analysis_service - INFO - 问题样本 3: 培训服务相关的政策？...
2025-08-19 11:53:26 - app.services.word_analysis_service - INFO - 问题样本 3: 培训服务相关的政策？...
2025-08-19 11:53:26 - app.services.word_analysis_service - INFO - 有效问题文本数: 103, 总文本长度: 1170
2025-08-19 11:53:26 - app.services.word_analysis_service - INFO - 有效问题文本数: 103, 总文本长度: 1170
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.badcase_review_status = %(badcase_review_status_1)s) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:53:26 - app.services.word_analysis_service - INFO - 文本分析完成，原始词汇: 703, 过滤后: 261, 唯一词汇: 54
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - 
                WITH dimension_scores AS (
                    -- 维度1的数据
                    SELECT
                        s.dimension_1_name as dimension_name,
                        s.score_1 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_1_name IS NOT NULL
                    AND s.score_1 IS NOT NULL

                    UNION ALL

                    -- 维度2的数据
                    SELECT
                        s.dimension_2_name as dimension_name,
                        s.score_2 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_2_name IS NOT NULL
                    AND s.score_2 IS NOT NULL

                    UNION ALL

                    -- 维度3的数据
                    SELECT
                        s.dimension_3_name as dimension_name,
                        s.score_3 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_3_name IS NOT NULL
                    AND s.score_3 IS NOT NULL

                    UNION ALL

                    -- 维度4的数据
                    SELECT
                        s.dimension_4_name as dimension_name,
                        s.score_4 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_4_name IS NOT NULL
                    AND s.score_4 IS NOT NULL

                    UNION ALL

                    -- 维度5的数据
                    SELECT
                        s.dimension_5_name as dimension_name,
                        s.score_5 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_5_name IS NOT NULL
                    AND s.score_5 IS NOT NULL
                )
                SELECT
                    dimension_name,
                    AVG(score) as avg_score,
                    COUNT(*) as sample_count
                FROM dimension_scores
                GROUP BY dimension_name
                ORDER BY avg_score ASC
            
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 1263s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored', 'badcase_review_status_1': 'reviewed'}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'classification_1': ''}
2025-08-19 11:53:26 - app.services.word_analysis_service - INFO - 文本分析完成，原始词汇: 703, 过滤后: 261, 唯一词汇: 54
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 428.2s ago] {'classification': '经济问题'}
2025-08-19 11:53:26 - app.services.word_analysis_service - INFO - 热词分析完成，共分析 103 个问题，生成 40 个热词
2025-08-19 11:53:26 - app.services.word_analysis_service - INFO - 热词分析完成，共分析 103 个问题，生成 40 个热词
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT access_logs.id AS access_logs_id, access_logs.user_id AS access_logs_user_id, access_logs.username AS access_logs_username, access_logs.action AS access_logs_action, access_logs.ip_address AS access_logs_ip_address, access_logs.created_at AS access_logs_created_at 
FROM access_logs 
WHERE access_logs.action = %(action_1)s) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.badcase_review_status = %(badcase_review_status_1)s AND questions.is_badcase = false) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 430.6s ago] {'action_1': 'login'}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 1263s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored', 'badcase_review_status_1': 'reviewed'}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT access_logs.id AS access_logs_id, access_logs.user_id AS access_logs_user_id, access_logs.username AS access_logs_username, access_logs.action AS access_logs_action, access_logs.ip_address AS access_logs_ip_address, access_logs.created_at AS access_logs_created_at 
FROM access_logs 
WHERE access_logs.action = %(action_1)s AND access_logs.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'action_1': 'login', 'created_at_1': datetime.datetime(2025, 8, 18, 0, 0)}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.8s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 0, 0)}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.8s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0)}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': ''}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT coalesce(sum(least(anon_1.cnt, %(least_1)s)), %(coalesce_2)s) AS coalesce_1 
FROM (SELECT answers.question_business_id AS qbid, count(answers.id) AS cnt 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE questions.created_at >= %(created_at_1)s AND answers.created_at >= %(created_at_2)s AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s) AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s GROUP BY answers.question_business_id) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'least_1': 2, 'coalesce_2': 0, 'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': '', 'assistant_type_1_1': 'doubao', 'assistant_type_1_2': 'xiaotian'}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT count(distinct(answers.question_business_id)) AS count_2 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND answers.is_scored = true AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s, %(assistant_type_1_3)s) GROUP BY answers.question_business_id 
HAVING count(distinct(answers.assistant_type)) = %(count_3)s) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': '', 'count_3': 3, 'assistant_type_1_1': 'yoyo', 'assistant_type_1_2': 'doubao', 'assistant_type_1_3': 'xiaotian'}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(distinct(questions.business_id)) AS count_1 
FROM questions JOIN answers ON questions.business_id = answers.question_business_id 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s) AND answers.created_at >= %(created_at_2)s
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': '', 'created_at_2': datetime.datetime(2025, 8, 18, 0, 0), 'assistant_type_1_1': 'doubao', 'assistant_type_1_2': 'xiaotian'}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.processing_status = %(processing_status_1)s AND questions.is_badcase = true) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'processing_status_1': 'scored'}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.processing_status = %(processing_status_1)s AND questions.badcase_review_status = %(badcase_review_status_1)s) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'processing_status_1': 'scored', 'badcase_review_status_1': 'reviewed'}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.8s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 2, 53, 26, 147198)}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.8s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 21, 53, 26, 147198)}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.updated_at >= %(updated_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'updated_at_1': datetime.datetime(2025, 8, 19, 3, 23, 26, 147198), 'classification_1': ''}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 3, 23, 26, 147198)}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.updated_at >= %(updated_at_1)s AND answers.is_scored = true) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'updated_at_1': datetime.datetime(2025, 8, 19, 3, 23, 26, 147198)}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT date_trunc(%(date_trunc_1)s, questions.created_at) AS day, count(questions.id) AS count 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s GROUP BY date_trunc(%(date_trunc_2)s, questions.created_at) ORDER BY day
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'date_trunc_1': 'day', 'created_at_1': datetime.datetime(2025, 8, 12, 3, 53, 26, 161941), 'date_trunc_2': 'day'}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT date_trunc(%(date_trunc_1)s, questions.updated_at) AS day, count(questions.id) AS count 
FROM questions 
WHERE questions.updated_at >= %(updated_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND questions.processing_status IN (%(processing_status_1_1)s, %(processing_status_1_2)s, %(processing_status_1_3)s) GROUP BY date_trunc(%(date_trunc_2)s, questions.updated_at) ORDER BY day
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'date_trunc_1': 'day', 'updated_at_1': datetime.datetime(2025, 8, 12, 3, 53, 26, 161941), 'classification_1': '', 'date_trunc_2': 'day', 'processing_status_1_1': 'classified', 'processing_status_1_2': 'answers_generated', 'processing_status_1_3': 'scored'}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT date_trunc(%(date_trunc_1)s, answers.created_at) AS day, count(answers.id) AS count 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE answers.created_at >= %(created_at_1)s AND questions.created_at >= %(created_at_2)s AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s) AND answers.is_scored = true AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s GROUP BY date_trunc(%(date_trunc_2)s, answers.created_at) ORDER BY day
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'date_trunc_1': 'day', 'created_at_1': datetime.datetime(2025, 8, 12, 3, 53, 26, 161941), 'created_at_2': datetime.datetime(2025, 8, 12, 3, 53, 26, 161941), 'classification_1': '', 'date_trunc_2': 'day', 'assistant_type_1_1': 'doubao', 'assistant_type_1_2': 'xiaotian'}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT answers.assistant_type AS answers_assistant_type, avg(scores.score_1) AS avg_score_1, avg(scores.score_2) AS avg_score_2, avg(scores.score_3) AS avg_score_3, avg(scores.score_4) AS avg_score_4, avg(scores.score_5) AS avg_score_5, avg(scores.average_score) AS avg_total, count(scores.id) AS score_count 
FROM answers JOIN scores ON answers.id = scores.answer_id GROUP BY answers.assistant_type
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT system_config.id AS system_config_id, system_config.config_key AS system_config_config_key, system_config.config_value AS system_config_config_value, system_config.config_type AS system_config_config_type, system_config.description AS system_config_description, system_config.effective_time AS system_config_effective_time, system_config.previous_value AS system_config_previous_value, system_config.status AS system_config_status, system_config.created_at AS system_config_created_at, system_config.updated_at AS system_config_updated_at 
FROM system_config 
WHERE system_config.config_key = %(config_key_1)s 
 LIMIT %(param_1)s
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 2766s ago] {'config_key_1': 'display.hot_categories_time_range', 'param_1': 1}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT questions.classification AS name, count(questions.id) AS count 
FROM questions 
WHERE questions.classification IS NOT NULL AND questions.classification != %(classification_1)s GROUP BY questions.classification
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'classification_1': ''}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT questions.classification AS name, count(questions.id) AS count 
FROM questions 
WHERE questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND questions.created_at >= %(created_at_1)s GROUP BY questions.classification ORDER BY count(questions.id) DESC
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'classification_1': '', 'created_at_1': datetime.datetime(2025, 8, 12, 3, 53, 26, 169055)}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions ORDER BY questions.created_at DESC 
 LIMIT %(param_1)s
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'param_1': 5}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers ORDER BY answers.created_at DESC 
 LIMIT %(param_1)s
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'param_1': 5}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT scores.id AS scores_id, scores.answer_id AS scores_answer_id, scores.score_1 AS scores_score_1, scores.score_2 AS scores_score_2, scores.score_3 AS scores_score_3, scores.score_4 AS scores_score_4, scores.score_5 AS scores_score_5, scores.dimension_1_name AS scores_dimension_1_name, scores.dimension_2_name AS scores_dimension_2_name, scores.dimension_3_name AS scores_dimension_3_name, scores.dimension_4_name AS scores_dimension_4_name, scores.dimension_5_name AS scores_dimension_5_name, scores.average_score AS scores_average_score, scores.comment AS scores_comment, scores.rated_at AS scores_rated_at 
FROM scores ORDER BY scores.rated_at DESC 
 LIMIT %(param_1)s
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'param_1': 5}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.8s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 3, 48, 26, 172568)}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 3, 48, 26, 172568)}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT scores.id AS scores_id, scores.answer_id AS scores_answer_id, scores.score_1 AS scores_score_1, scores.score_2 AS scores_score_2, scores.score_3 AS scores_score_3, scores.score_4 AS scores_score_4, scores.score_5 AS scores_score_5, scores.dimension_1_name AS scores_dimension_1_name, scores.dimension_2_name AS scores_dimension_2_name, scores.dimension_3_name AS scores_dimension_3_name, scores.dimension_4_name AS scores_dimension_4_name, scores.dimension_5_name AS scores_dimension_5_name, scores.average_score AS scores_average_score, scores.comment AS scores_comment, scores.rated_at AS scores_rated_at 
FROM scores 
WHERE scores.rated_at >= %(rated_at_1)s) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'rated_at_1': datetime.datetime(2025, 8, 19, 3, 48, 26, 172568)}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.assistant_type = %(assistant_type_1)s AND answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'assistant_type_1': 'yoyo', 'created_at_1': datetime.datetime(2025, 8, 19, 3, 48, 26, 172568)}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.assistant_type = %(assistant_type_1)s AND answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'assistant_type_1': 'doubao', 'created_at_1': datetime.datetime(2025, 8, 19, 3, 48, 26, 172568)}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.assistant_type = %(assistant_type_1)s AND answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - [cached since 427.7s ago] {'assistant_type_1': 'xiaotian', 'created_at_1': datetime.datetime(2025, 8, 19, 3, 48, 26, 172568)}
2025-08-19 11:53:26 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT questions.classification AS questions_classification, count(questions.id) AS badcase_count 
FROM questions 
WHERE questions.is_badcase = true GROUP BY questions.classification ORDER BY count(questions.id) DESC 
 LIMIT %(param_1)s
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 458.2s ago] {'param_1': 3}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 1293s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored'}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - 
                WITH dimension_scores AS (
                    -- 维度1的数据
                    SELECT
                        s.dimension_1_name as dimension_name,
                        s.score_1 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_1_name IS NOT NULL
                    AND s.score_1 IS NOT NULL

                    UNION ALL

                    -- 维度2的数据
                    SELECT
                        s.dimension_2_name as dimension_name,
                        s.score_2 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_2_name IS NOT NULL
                    AND s.score_2 IS NOT NULL

                    UNION ALL

                    -- 维度3的数据
                    SELECT
                        s.dimension_3_name as dimension_name,
                        s.score_3 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_3_name IS NOT NULL
                    AND s.score_3 IS NOT NULL

                    UNION ALL

                    -- 维度4的数据
                    SELECT
                        s.dimension_4_name as dimension_name,
                        s.score_4 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_4_name IS NOT NULL
                    AND s.score_4 IS NOT NULL

                    UNION ALL

                    -- 维度5的数据
                    SELECT
                        s.dimension_5_name as dimension_name,
                        s.score_5 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_5_name IS NOT NULL
                    AND s.score_5 IS NOT NULL
                )
                SELECT
                    dimension_name,
                    AVG(score) as avg_score,
                    COUNT(*) as sample_count
                FROM dimension_scores
                GROUP BY dimension_name
                ORDER BY avg_score ASC
            
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.is_badcase = true) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 458.2s ago] {'classification': '产品使用'}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 1293s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored'}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.is_badcase = true AND questions.badcase_review_status = %(badcase_review_status_1)s) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 1293s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored', 'badcase_review_status_1': 'pending'}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.badcase_review_status = %(badcase_review_status_1)s) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 1293s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored', 'badcase_review_status_1': 'reviewed'}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.badcase_review_status = %(badcase_review_status_1)s AND questions.is_badcase = false) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - 
                WITH dimension_scores AS (
                    -- 维度1的数据
                    SELECT
                        s.dimension_1_name as dimension_name,
                        s.score_1 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_1_name IS NOT NULL
                    AND s.score_1 IS NOT NULL

                    UNION ALL

                    -- 维度2的数据
                    SELECT
                        s.dimension_2_name as dimension_name,
                        s.score_2 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_2_name IS NOT NULL
                    AND s.score_2 IS NOT NULL

                    UNION ALL

                    -- 维度3的数据
                    SELECT
                        s.dimension_3_name as dimension_name,
                        s.score_3 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_3_name IS NOT NULL
                    AND s.score_3 IS NOT NULL

                    UNION ALL

                    -- 维度4的数据
                    SELECT
                        s.dimension_4_name as dimension_name,
                        s.score_4 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_4_name IS NOT NULL
                    AND s.score_4 IS NOT NULL

                    UNION ALL

                    -- 维度5的数据
                    SELECT
                        s.dimension_5_name as dimension_name,
                        s.score_5 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_5_name IS NOT NULL
                    AND s.score_5 IS NOT NULL
                )
                SELECT
                    dimension_name,
                    AVG(score) as avg_score,
                    COUNT(*) as sample_count
                FROM dimension_scores
                GROUP BY dimension_name
                ORDER BY avg_score ASC
            
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 1293s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored', 'badcase_review_status_1': 'reviewed'}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 458.2s ago] {'classification': '其他'}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - 
                WITH dimension_scores AS (
                    -- 维度1的数据
                    SELECT
                        s.dimension_1_name as dimension_name,
                        s.score_1 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_1_name IS NOT NULL
                    AND s.score_1 IS NOT NULL

                    UNION ALL

                    -- 维度2的数据
                    SELECT
                        s.dimension_2_name as dimension_name,
                        s.score_2 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_2_name IS NOT NULL
                    AND s.score_2 IS NOT NULL

                    UNION ALL

                    -- 维度3的数据
                    SELECT
                        s.dimension_3_name as dimension_name,
                        s.score_3 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_3_name IS NOT NULL
                    AND s.score_3 IS NOT NULL

                    UNION ALL

                    -- 维度4的数据
                    SELECT
                        s.dimension_4_name as dimension_name,
                        s.score_4 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_4_name IS NOT NULL
                    AND s.score_4 IS NOT NULL

                    UNION ALL

                    -- 维度5的数据
                    SELECT
                        s.dimension_5_name as dimension_name,
                        s.score_5 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_5_name IS NOT NULL
                    AND s.score_5 IS NOT NULL
                )
                SELECT
                    dimension_name,
                    AVG(score) as avg_score,
                    COUNT(*) as sample_count
                FROM dimension_scores
                GROUP BY dimension_name
                ORDER BY avg_score ASC
            
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 458.2s ago] {'classification': '经济问题'}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 1353s ago] {}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0)}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': ''}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'classification_1': ''}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT access_logs.id AS access_logs_id, access_logs.user_id AS access_logs_user_id, access_logs.username AS access_logs_username, access_logs.action AS access_logs_action, access_logs.ip_address AS access_logs_ip_address, access_logs.created_at AS access_logs_created_at 
FROM access_logs 
WHERE access_logs.action = %(action_1)s) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 460.6s ago] {'action_1': 'login'}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT access_logs.id AS access_logs_id, access_logs.user_id AS access_logs_user_id, access_logs.username AS access_logs_username, access_logs.action AS access_logs_action, access_logs.ip_address AS access_logs_ip_address, access_logs.created_at AS access_logs_created_at 
FROM access_logs 
WHERE access_logs.action = %(action_1)s AND access_logs.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'action_1': 'login', 'created_at_1': datetime.datetime(2025, 8, 18, 0, 0)}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 0, 0)}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0)}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': ''}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT coalesce(sum(least(anon_1.cnt, %(least_1)s)), %(coalesce_2)s) AS coalesce_1 
FROM (SELECT answers.question_business_id AS qbid, count(answers.id) AS cnt 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE questions.created_at >= %(created_at_1)s AND answers.created_at >= %(created_at_2)s AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s) AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s GROUP BY answers.question_business_id) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'least_1': 2, 'coalesce_2': 0, 'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': '', 'assistant_type_1_1': 'doubao', 'assistant_type_1_2': 'xiaotian'}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT count(distinct(answers.question_business_id)) AS count_2 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND answers.is_scored = true AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s, %(assistant_type_1_3)s) GROUP BY answers.question_business_id 
HAVING count(distinct(answers.assistant_type)) = %(count_3)s) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': '', 'count_3': 3, 'assistant_type_1_1': 'yoyo', 'assistant_type_1_2': 'doubao', 'assistant_type_1_3': 'xiaotian'}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(distinct(questions.business_id)) AS count_1 
FROM questions JOIN answers ON questions.business_id = answers.question_business_id 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s) AND answers.created_at >= %(created_at_2)s
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': '', 'created_at_2': datetime.datetime(2025, 8, 18, 0, 0), 'assistant_type_1_1': 'doubao', 'assistant_type_1_2': 'xiaotian'}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.processing_status = %(processing_status_1)s AND questions.is_badcase = true) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'processing_status_1': 'scored'}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.processing_status = %(processing_status_1)s AND questions.badcase_review_status = %(badcase_review_status_1)s) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'processing_status_1': 'scored', 'badcase_review_status_1': 'reviewed'}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 2, 53, 56, 132313)}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 21, 53, 56, 132313)}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.updated_at >= %(updated_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'updated_at_1': datetime.datetime(2025, 8, 19, 3, 23, 56, 132313), 'classification_1': ''}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 3, 23, 56, 132313)}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.updated_at >= %(updated_at_1)s AND answers.is_scored = true) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'updated_at_1': datetime.datetime(2025, 8, 19, 3, 23, 56, 132313)}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT date_trunc(%(date_trunc_1)s, questions.created_at) AS day, count(questions.id) AS count 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s GROUP BY date_trunc(%(date_trunc_2)s, questions.created_at) ORDER BY day
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'date_trunc_1': 'day', 'created_at_1': datetime.datetime(2025, 8, 12, 3, 53, 56, 145396), 'date_trunc_2': 'day'}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT date_trunc(%(date_trunc_1)s, questions.updated_at) AS day, count(questions.id) AS count 
FROM questions 
WHERE questions.updated_at >= %(updated_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND questions.processing_status IN (%(processing_status_1_1)s, %(processing_status_1_2)s, %(processing_status_1_3)s) GROUP BY date_trunc(%(date_trunc_2)s, questions.updated_at) ORDER BY day
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'date_trunc_1': 'day', 'updated_at_1': datetime.datetime(2025, 8, 12, 3, 53, 56, 145396), 'classification_1': '', 'date_trunc_2': 'day', 'processing_status_1_1': 'classified', 'processing_status_1_2': 'answers_generated', 'processing_status_1_3': 'scored'}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT date_trunc(%(date_trunc_1)s, answers.created_at) AS day, count(answers.id) AS count 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE answers.created_at >= %(created_at_1)s AND questions.created_at >= %(created_at_2)s AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s) AND answers.is_scored = true AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s GROUP BY date_trunc(%(date_trunc_2)s, answers.created_at) ORDER BY day
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'date_trunc_1': 'day', 'created_at_1': datetime.datetime(2025, 8, 12, 3, 53, 56, 145396), 'created_at_2': datetime.datetime(2025, 8, 12, 3, 53, 56, 145396), 'classification_1': '', 'date_trunc_2': 'day', 'assistant_type_1_1': 'doubao', 'assistant_type_1_2': 'xiaotian'}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT answers.assistant_type AS answers_assistant_type, avg(scores.score_1) AS avg_score_1, avg(scores.score_2) AS avg_score_2, avg(scores.score_3) AS avg_score_3, avg(scores.score_4) AS avg_score_4, avg(scores.score_5) AS avg_score_5, avg(scores.average_score) AS avg_total, count(scores.id) AS score_count 
FROM answers JOIN scores ON answers.id = scores.answer_id GROUP BY answers.assistant_type
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT system_config.id AS system_config_id, system_config.config_key AS system_config_config_key, system_config.config_value AS system_config_config_value, system_config.config_type AS system_config_config_type, system_config.description AS system_config_description, system_config.effective_time AS system_config_effective_time, system_config.previous_value AS system_config_previous_value, system_config.status AS system_config_status, system_config.created_at AS system_config_created_at, system_config.updated_at AS system_config_updated_at 
FROM system_config 
WHERE system_config.config_key = %(config_key_1)s 
 LIMIT %(param_1)s
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 2796s ago] {'config_key_1': 'display.hot_categories_time_range', 'param_1': 1}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT questions.classification AS name, count(questions.id) AS count 
FROM questions 
WHERE questions.classification IS NOT NULL AND questions.classification != %(classification_1)s GROUP BY questions.classification
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'classification_1': ''}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT questions.classification AS name, count(questions.id) AS count 
FROM questions 
WHERE questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND questions.created_at >= %(created_at_1)s GROUP BY questions.classification ORDER BY count(questions.id) DESC
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'classification_1': '', 'created_at_1': datetime.datetime(2025, 8, 12, 3, 53, 56, 153841)}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions ORDER BY questions.created_at DESC 
 LIMIT %(param_1)s
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'param_1': 5}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers ORDER BY answers.created_at DESC 
 LIMIT %(param_1)s
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'param_1': 5}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT scores.id AS scores_id, scores.answer_id AS scores_answer_id, scores.score_1 AS scores_score_1, scores.score_2 AS scores_score_2, scores.score_3 AS scores_score_3, scores.score_4 AS scores_score_4, scores.score_5 AS scores_score_5, scores.dimension_1_name AS scores_dimension_1_name, scores.dimension_2_name AS scores_dimension_2_name, scores.dimension_3_name AS scores_dimension_3_name, scores.dimension_4_name AS scores_dimension_4_name, scores.dimension_5_name AS scores_dimension_5_name, scores.average_score AS scores_average_score, scores.comment AS scores_comment, scores.rated_at AS scores_rated_at 
FROM scores ORDER BY scores.rated_at DESC 
 LIMIT %(param_1)s
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'param_1': 5}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.8s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 3, 48, 56, 157266)}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 3, 48, 56, 157266)}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT scores.id AS scores_id, scores.answer_id AS scores_answer_id, scores.score_1 AS scores_score_1, scores.score_2 AS scores_score_2, scores.score_3 AS scores_score_3, scores.score_4 AS scores_score_4, scores.score_5 AS scores_score_5, scores.dimension_1_name AS scores_dimension_1_name, scores.dimension_2_name AS scores_dimension_2_name, scores.dimension_3_name AS scores_dimension_3_name, scores.dimension_4_name AS scores_dimension_4_name, scores.dimension_5_name AS scores_dimension_5_name, scores.average_score AS scores_average_score, scores.comment AS scores_comment, scores.rated_at AS scores_rated_at 
FROM scores 
WHERE scores.rated_at >= %(rated_at_1)s) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'rated_at_1': datetime.datetime(2025, 8, 19, 3, 48, 56, 157266)}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.assistant_type = %(assistant_type_1)s AND answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'assistant_type_1': 'yoyo', 'created_at_1': datetime.datetime(2025, 8, 19, 3, 48, 56, 157266)}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.assistant_type = %(assistant_type_1)s AND answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'assistant_type_1': 'doubao', 'created_at_1': datetime.datetime(2025, 8, 19, 3, 48, 56, 157266)}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.assistant_type = %(assistant_type_1)s AND answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - [cached since 457.7s ago] {'assistant_type_1': 'xiaotian', 'created_at_1': datetime.datetime(2025, 8, 19, 3, 48, 56, 157266)}
2025-08-19 11:53:56 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:54:26 - app.api.word_analysis_api - INFO - 获取词云数据请求: time_range=week, limit=40
2025-08-19 11:54:26 - app.api.word_analysis_api - INFO - 获取词云数据请求: time_range=week, limit=40
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:54:26 - app.services.word_analysis_service - INFO - 开始获取热词分析数据，时间范围: week, 限制: 40
2025-08-19 11:54:26 - app.services.word_analysis_service - INFO - 开始获取热词分析数据，时间范围: week, 限制: 40
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT questions.classification AS questions_classification, count(questions.id) AS badcase_count 
FROM questions 
WHERE questions.is_badcase = true GROUP BY questions.classification ORDER BY count(questions.id) DESC 
 LIMIT %(param_1)s
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 1383s ago] {}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 1323s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored'}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 488.2s ago] {'param_1': 3}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.query IS NOT NULL AND questions.query != %(query_1)s AND questions.is_deleted = false
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 488.2s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'query_1': ''}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - 
                WITH dimension_scores AS (
                    -- 维度1的数据
                    SELECT
                        s.dimension_1_name as dimension_name,
                        s.score_1 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_1_name IS NOT NULL
                    AND s.score_1 IS NOT NULL

                    UNION ALL

                    -- 维度2的数据
                    SELECT
                        s.dimension_2_name as dimension_name,
                        s.score_2 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_2_name IS NOT NULL
                    AND s.score_2 IS NOT NULL

                    UNION ALL

                    -- 维度3的数据
                    SELECT
                        s.dimension_3_name as dimension_name,
                        s.score_3 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_3_name IS NOT NULL
                    AND s.score_3 IS NOT NULL

                    UNION ALL

                    -- 维度4的数据
                    SELECT
                        s.dimension_4_name as dimension_name,
                        s.score_4 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_4_name IS NOT NULL
                    AND s.score_4 IS NOT NULL

                    UNION ALL

                    -- 维度5的数据
                    SELECT
                        s.dimension_5_name as dimension_name,
                        s.score_5 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_5_name IS NOT NULL
                    AND s.score_5 IS NOT NULL
                )
                SELECT
                    dimension_name,
                    AVG(score) as avg_score,
                    COUNT(*) as sample_count
                FROM dimension_scores
                GROUP BY dimension_name
                ORDER BY avg_score ASC
            
2025-08-19 11:54:26 - app.services.word_analysis_service - INFO - 查询到 103 个问题，时间范围: 2025-08-18 00:00:00 至 2025-08-24 23:59:59.999999
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.is_badcase = true) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 488.2s ago] {'classification': '产品使用'}
2025-08-19 11:54:26 - app.services.word_analysis_service - INFO - 查询到 103 个问题，时间范围: 2025-08-18 00:00:00 至 2025-08-24 23:59:59.999999
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 1323s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored'}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:54:26 - app.services.word_analysis_service - INFO - 问题样本 1: 价格是多少？...
2025-08-19 11:54:26 - app.services.word_analysis_service - INFO - 问题样本 1: 价格是多少？...
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0)}
2025-08-19 11:54:26 - app.services.word_analysis_service - INFO - 问题样本 2: 合作相关的要求？...
2025-08-19 11:54:26 - app.services.word_analysis_service - INFO - 问题样本 2: 合作相关的要求？...
2025-08-19 11:54:26 - app.services.word_analysis_service - INFO - 问题样本 3: 培训服务相关的政策？...
2025-08-19 11:54:26 - app.services.word_analysis_service - INFO - 问题样本 3: 培训服务相关的政策？...
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.is_badcase = true AND questions.badcase_review_status = %(badcase_review_status_1)s) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - 
                WITH dimension_scores AS (
                    -- 维度1的数据
                    SELECT
                        s.dimension_1_name as dimension_name,
                        s.score_1 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_1_name IS NOT NULL
                    AND s.score_1 IS NOT NULL

                    UNION ALL

                    -- 维度2的数据
                    SELECT
                        s.dimension_2_name as dimension_name,
                        s.score_2 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_2_name IS NOT NULL
                    AND s.score_2 IS NOT NULL

                    UNION ALL

                    -- 维度3的数据
                    SELECT
                        s.dimension_3_name as dimension_name,
                        s.score_3 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_3_name IS NOT NULL
                    AND s.score_3 IS NOT NULL

                    UNION ALL

                    -- 维度4的数据
                    SELECT
                        s.dimension_4_name as dimension_name,
                        s.score_4 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_4_name IS NOT NULL
                    AND s.score_4 IS NOT NULL

                    UNION ALL

                    -- 维度5的数据
                    SELECT
                        s.dimension_5_name as dimension_name,
                        s.score_5 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_5_name IS NOT NULL
                    AND s.score_5 IS NOT NULL
                )
                SELECT
                    dimension_name,
                    AVG(score) as avg_score,
                    COUNT(*) as sample_count
                FROM dimension_scores
                GROUP BY dimension_name
                ORDER BY avg_score ASC
            
2025-08-19 11:54:26 - app.services.word_analysis_service - INFO - 有效问题文本数: 103, 总文本长度: 1170
2025-08-19 11:54:26 - app.services.word_analysis_service - INFO - 有效问题文本数: 103, 总文本长度: 1170
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': ''}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 1323s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored', 'badcase_review_status_1': 'pending'}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 488.2s ago] {'classification': '其他'}
2025-08-19 11:54:26 - app.services.word_analysis_service - INFO - 文本分析完成，原始词汇: 703, 过滤后: 261, 唯一词汇: 54
2025-08-19 11:54:26 - app.services.word_analysis_service - INFO - 文本分析完成，原始词汇: 703, 过滤后: 261, 唯一词汇: 54
2025-08-19 11:54:26 - app.services.word_analysis_service - INFO - 热词分析完成，共分析 103 个问题，生成 40 个热词
2025-08-19 11:54:26 - app.services.word_analysis_service - INFO - 热词分析完成，共分析 103 个问题，生成 40 个热词
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.badcase_review_status = %(badcase_review_status_1)s) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - 
                WITH dimension_scores AS (
                    -- 维度1的数据
                    SELECT
                        s.dimension_1_name as dimension_name,
                        s.score_1 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_1_name IS NOT NULL
                    AND s.score_1 IS NOT NULL

                    UNION ALL

                    -- 维度2的数据
                    SELECT
                        s.dimension_2_name as dimension_name,
                        s.score_2 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_2_name IS NOT NULL
                    AND s.score_2 IS NOT NULL

                    UNION ALL

                    -- 维度3的数据
                    SELECT
                        s.dimension_3_name as dimension_name,
                        s.score_3 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_3_name IS NOT NULL
                    AND s.score_3 IS NOT NULL

                    UNION ALL

                    -- 维度4的数据
                    SELECT
                        s.dimension_4_name as dimension_name,
                        s.score_4 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_4_name IS NOT NULL
                    AND s.score_4 IS NOT NULL

                    UNION ALL

                    -- 维度5的数据
                    SELECT
                        s.dimension_5_name as dimension_name,
                        s.score_5 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_5_name IS NOT NULL
                    AND s.score_5 IS NOT NULL
                )
                SELECT
                    dimension_name,
                    AVG(score) as avg_score,
                    COUNT(*) as sample_count
                FROM dimension_scores
                GROUP BY dimension_name
                ORDER BY avg_score ASC
            
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {'classification_1': ''}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 1323s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored', 'badcase_review_status_1': 'reviewed'}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 488.3s ago] {'classification': '经济问题'}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT access_logs.id AS access_logs_id, access_logs.user_id AS access_logs_user_id, access_logs.username AS access_logs_username, access_logs.action AS access_logs_action, access_logs.ip_address AS access_logs_ip_address, access_logs.created_at AS access_logs_created_at 
FROM access_logs 
WHERE access_logs.action = %(action_1)s) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.badcase_review_status = %(badcase_review_status_1)s AND questions.is_badcase = false) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 490.6s ago] {'action_1': 'login'}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 1323s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored', 'badcase_review_status_1': 'reviewed'}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT access_logs.id AS access_logs_id, access_logs.user_id AS access_logs_user_id, access_logs.username AS access_logs_username, access_logs.action AS access_logs_action, access_logs.ip_address AS access_logs_ip_address, access_logs.created_at AS access_logs_created_at 
FROM access_logs 
WHERE access_logs.action = %(action_1)s AND access_logs.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {'action_1': 'login', 'created_at_1': datetime.datetime(2025, 8, 18, 0, 0)}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.8s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 0, 0)}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.8s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0)}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.8s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': ''}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT coalesce(sum(least(anon_1.cnt, %(least_1)s)), %(coalesce_2)s) AS coalesce_1 
FROM (SELECT answers.question_business_id AS qbid, count(answers.id) AS cnt 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE questions.created_at >= %(created_at_1)s AND answers.created_at >= %(created_at_2)s AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s) AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s GROUP BY answers.question_business_id) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {'least_1': 2, 'coalesce_2': 0, 'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': '', 'assistant_type_1_1': 'doubao', 'assistant_type_1_2': 'xiaotian'}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT count(distinct(answers.question_business_id)) AS count_2 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND answers.is_scored = true AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s, %(assistant_type_1_3)s) GROUP BY answers.question_business_id 
HAVING count(distinct(answers.assistant_type)) = %(count_3)s) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': '', 'count_3': 3, 'assistant_type_1_1': 'yoyo', 'assistant_type_1_2': 'doubao', 'assistant_type_1_3': 'xiaotian'}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(distinct(questions.business_id)) AS count_1 
FROM questions JOIN answers ON questions.business_id = answers.question_business_id 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s) AND answers.created_at >= %(created_at_2)s
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': '', 'created_at_2': datetime.datetime(2025, 8, 18, 0, 0), 'assistant_type_1_1': 'doubao', 'assistant_type_1_2': 'xiaotian'}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.processing_status = %(processing_status_1)s AND questions.is_badcase = true) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'processing_status_1': 'scored'}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.processing_status = %(processing_status_1)s AND questions.badcase_review_status = %(badcase_review_status_1)s) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'processing_status_1': 'scored', 'badcase_review_status_1': 'reviewed'}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.8s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 2, 54, 26, 152846)}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.8s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 21, 54, 26, 152846)}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.updated_at >= %(updated_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {'updated_at_1': datetime.datetime(2025, 8, 19, 3, 24, 26, 152846), 'classification_1': ''}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 3, 24, 26, 152846)}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.updated_at >= %(updated_at_1)s AND answers.is_scored = true) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {'updated_at_1': datetime.datetime(2025, 8, 19, 3, 24, 26, 152846)}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT date_trunc(%(date_trunc_1)s, questions.created_at) AS day, count(questions.id) AS count 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s GROUP BY date_trunc(%(date_trunc_2)s, questions.created_at) ORDER BY day
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {'date_trunc_1': 'day', 'created_at_1': datetime.datetime(2025, 8, 12, 3, 54, 26, 167885), 'date_trunc_2': 'day'}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT date_trunc(%(date_trunc_1)s, questions.updated_at) AS day, count(questions.id) AS count 
FROM questions 
WHERE questions.updated_at >= %(updated_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND questions.processing_status IN (%(processing_status_1_1)s, %(processing_status_1_2)s, %(processing_status_1_3)s) GROUP BY date_trunc(%(date_trunc_2)s, questions.updated_at) ORDER BY day
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {'date_trunc_1': 'day', 'updated_at_1': datetime.datetime(2025, 8, 12, 3, 54, 26, 167885), 'classification_1': '', 'date_trunc_2': 'day', 'processing_status_1_1': 'classified', 'processing_status_1_2': 'answers_generated', 'processing_status_1_3': 'scored'}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT date_trunc(%(date_trunc_1)s, answers.created_at) AS day, count(answers.id) AS count 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE answers.created_at >= %(created_at_1)s AND questions.created_at >= %(created_at_2)s AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s) AND answers.is_scored = true AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s GROUP BY date_trunc(%(date_trunc_2)s, answers.created_at) ORDER BY day
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {'date_trunc_1': 'day', 'created_at_1': datetime.datetime(2025, 8, 12, 3, 54, 26, 167885), 'created_at_2': datetime.datetime(2025, 8, 12, 3, 54, 26, 167885), 'classification_1': '', 'date_trunc_2': 'day', 'assistant_type_1_1': 'doubao', 'assistant_type_1_2': 'xiaotian'}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT answers.assistant_type AS answers_assistant_type, avg(scores.score_1) AS avg_score_1, avg(scores.score_2) AS avg_score_2, avg(scores.score_3) AS avg_score_3, avg(scores.score_4) AS avg_score_4, avg(scores.score_5) AS avg_score_5, avg(scores.average_score) AS avg_total, count(scores.id) AS score_count 
FROM answers JOIN scores ON answers.id = scores.answer_id GROUP BY answers.assistant_type
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT system_config.id AS system_config_id, system_config.config_key AS system_config_config_key, system_config.config_value AS system_config_config_value, system_config.config_type AS system_config_config_type, system_config.description AS system_config_description, system_config.effective_time AS system_config_effective_time, system_config.previous_value AS system_config_previous_value, system_config.status AS system_config_status, system_config.created_at AS system_config_created_at, system_config.updated_at AS system_config_updated_at 
FROM system_config 
WHERE system_config.config_key = %(config_key_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 2826s ago] {'config_key_1': 'display.hot_categories_time_range', 'param_1': 1}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT questions.classification AS name, count(questions.id) AS count 
FROM questions 
WHERE questions.classification IS NOT NULL AND questions.classification != %(classification_1)s GROUP BY questions.classification
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {'classification_1': ''}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT questions.classification AS name, count(questions.id) AS count 
FROM questions 
WHERE questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND questions.created_at >= %(created_at_1)s GROUP BY questions.classification ORDER BY count(questions.id) DESC
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {'classification_1': '', 'created_at_1': datetime.datetime(2025, 8, 12, 3, 54, 26, 175235)}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions ORDER BY questions.created_at DESC 
 LIMIT %(param_1)s
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {'param_1': 5}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers ORDER BY answers.created_at DESC 
 LIMIT %(param_1)s
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {'param_1': 5}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT scores.id AS scores_id, scores.answer_id AS scores_answer_id, scores.score_1 AS scores_score_1, scores.score_2 AS scores_score_2, scores.score_3 AS scores_score_3, scores.score_4 AS scores_score_4, scores.score_5 AS scores_score_5, scores.dimension_1_name AS scores_dimension_1_name, scores.dimension_2_name AS scores_dimension_2_name, scores.dimension_3_name AS scores_dimension_3_name, scores.dimension_4_name AS scores_dimension_4_name, scores.dimension_5_name AS scores_dimension_5_name, scores.average_score AS scores_average_score, scores.comment AS scores_comment, scores.rated_at AS scores_rated_at 
FROM scores ORDER BY scores.rated_at DESC 
 LIMIT %(param_1)s
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {'param_1': 5}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.8s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 3, 49, 26, 179074)}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 3, 49, 26, 179074)}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT scores.id AS scores_id, scores.answer_id AS scores_answer_id, scores.score_1 AS scores_score_1, scores.score_2 AS scores_score_2, scores.score_3 AS scores_score_3, scores.score_4 AS scores_score_4, scores.score_5 AS scores_score_5, scores.dimension_1_name AS scores_dimension_1_name, scores.dimension_2_name AS scores_dimension_2_name, scores.dimension_3_name AS scores_dimension_3_name, scores.dimension_4_name AS scores_dimension_4_name, scores.dimension_5_name AS scores_dimension_5_name, scores.average_score AS scores_average_score, scores.comment AS scores_comment, scores.rated_at AS scores_rated_at 
FROM scores 
WHERE scores.rated_at >= %(rated_at_1)s) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {'rated_at_1': datetime.datetime(2025, 8, 19, 3, 49, 26, 179074)}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.assistant_type = %(assistant_type_1)s AND answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {'assistant_type_1': 'yoyo', 'created_at_1': datetime.datetime(2025, 8, 19, 3, 49, 26, 179074)}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.assistant_type = %(assistant_type_1)s AND answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {'assistant_type_1': 'doubao', 'created_at_1': datetime.datetime(2025, 8, 19, 3, 49, 26, 179074)}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.assistant_type = %(assistant_type_1)s AND answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - [cached since 487.7s ago] {'assistant_type_1': 'xiaotian', 'created_at_1': datetime.datetime(2025, 8, 19, 3, 49, 26, 179074)}
2025-08-19 11:54:26 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:54:32 - apscheduler.scheduler - DEBUG - Looking for jobs to run
2025-08-19 11:54:32 - apscheduler.scheduler - DEBUG - Next wakeup is due at 2025-08-19 11:57:32.946633+08:00 (in 179.999322 seconds)
2025-08-19 11:54:32 - apscheduler.executors.default - INFO - Running job "可配置间隔AI处理工作流 (trigger: interval[0:03:00], next run at: 2025-08-19 11:57:32 CST)" (scheduled at 2025-08-19 11:54:32.946633+08:00)
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - 
                    SELECT COUNT(*) FROM table1 t1
                    WHERE t1.query IS NOT NULL
                    AND t1.query != ''
                    AND TRIM(t1.query) != ''
                    AND t1.sendmessagetime >= %(week_start)s
                    AND NOT EXISTS (
                        SELECT 1 FROM questions q
                        WHERE q.business_id = MD5(CONCAT(
                            t1.pageid,
                            COALESCE(to_char(t1.sendmessagetime, 'YYYY-MM-DD"T"HH24:MI:SS.US'), ''),
                            t1.query
                        ))
                    )
                
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'week_start': datetime.datetime(2025, 8, 18, 0, 0)}
2025-08-19 11:54:32 - app.services.scheduler_service - INFO - 🔍 检测到 100 条新数据需要同步
2025-08-19 11:54:32 - app.services.scheduler_service - INFO - 🔍 检测到 100 条新数据需要同步
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:54:32 - app.services.scheduler_service - INFO - 检测到可处理数据，开始执行完整工作流: workflow_20250819_035432
2025-08-19 11:54:32 - app.services.scheduler_service - INFO - 检测到可处理数据，开始执行完整工作流: workflow_20250819_035432
2025-08-19 11:54:32 - app.services.scheduler_service - INFO - 开始执行完整工作流: workflow_20250819_035432
2025-08-19 11:54:32 - app.services.scheduler_service - INFO - 开始执行完整工作流: workflow_20250819_035432
2025-08-19 11:54:32 - app.services.scheduler_service - INFO - 执行工作流阶段: data_sync
2025-08-19 11:54:32 - app.services.scheduler_service - INFO - 执行工作流阶段: data_sync
2025-08-19 11:54:32 - app.services.scheduler_service - INFO - 开始执行数据同步阶段 [workflow: workflow_20250819_035432]
2025-08-19 11:54:32 - app.services.scheduler_service - INFO - 开始执行数据同步阶段 [workflow: workflow_20250819_035432]
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.sendmessagetime <= %(sendmessagetime_1)s ORDER BY questions.sendmessagetime DESC 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'sendmessagetime_1': datetime.datetime(2025, 8, 19, 3, 54, 32, 951290), 'param_1': 1}
2025-08-19 11:54:32 - app.services.sync_service - DEBUG - 获取最后同步时间: 2025-08-18 16:10:00
2025-08-19 11:54:32 - app.services.sync_service - DEBUG - 获取最后同步时间: 2025-08-18 16:10:00
2025-08-19 11:54:32 - app.services.sync_service - INFO - 开始数据同步，最后同步时间: 2025-08-18 16:10:00
2025-08-19 11:54:32 - app.services.sync_service - INFO - 开始数据同步，最后同步时间: 2025-08-18 16:10:00
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - 
                    SELECT
                        t1.pageid,
                        t1.devicetypename,
                        t1.sendmessagetime,
                        t1.query,
                        t1.answer,
                        t1.serviceid,
                        t1.qatype,
                        t1.intent,
                        t1.iskeyboardinput,
                        t1.isstopanswer
                    FROM table1 t1
                    WHERE t1.query IS NOT NULL
                    AND t1.query != ''
                    AND TRIM(t1.query) != ''
                    AND t1.sendmessagetime >= %(week_start)s
                    AND NOT EXISTS (
                        SELECT 1 FROM questions q
                        WHERE q.business_id = MD5(CONCAT(
                            t1.pageid,
                            COALESCE(to_char(t1.sendmessagetime, 'YYYY-MM-DD"T"HH24:MI:SS.US'), ''),
                            t1.query
                        ))
                    )
                    ORDER BY t1.sendmessagetime ASC
                
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'week_start': datetime.datetime(2025, 8, 18, 0, 0)}
2025-08-19 11:54:32 - app.services.sync_service - INFO - 从table1获取到 100 条有效数据（已过滤空query记录）
2025-08-19 11:54:32 - app.services.sync_service - INFO - 从table1获取到 100 条有效数据（已过滤空query记录）
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '7b22a0db6a8da27938ddb5e14c4ff019', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 956523), 'questions_id': 1442}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'a27722b4e4689fff4566cd43b74fb06a', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 958259), 'questions_id': 1443}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'e8146d52bbe9ceab98d2dab6e30db2ed', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 960134), 'questions_id': 1392}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'cf2211fc9eb449469613db5f947efcab', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 961654), 'questions_id': 1444}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'bccbc6acf52f7e3d5a33df48d444ad92', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 963409), 'questions_id': 1445}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '8cf63d22e34f4e0ec9b9620c934bf0c3', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 964943), 'questions_id': 1393}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '26a58fb2a92766f3339f88b759509552', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 966314), 'questions_id': 1446}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '83af0a8ba059bc2c346d8a6c3a6a0a19', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 967837), 'questions_id': 1394}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'bda2755170f34fe6f27354d66c2ca883', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 969190), 'questions_id': 1447}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '559bf43db7176d56a855bb6e9f764c78', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 970615), 'questions_id': 1448}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '4afddbe0e4f85fe9d9ca9e5a2d974765', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 972049), 'questions_id': 1449}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '8e818135ba252084f447a1942a9b767a', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 973434), 'questions_id': 1395}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'c54e7b687d7c7a3fced8ae1f52abe999', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 974868), 'questions_id': 1396}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'eab488b34a407e97c5f072469a39271c', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 976259), 'questions_id': 1397}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '2301d5e861f65c94d6a64ed2b96d9dd9', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 977595), 'questions_id': 1398}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '93182fbb00a15577f97dd4690e47409b', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 979063), 'questions_id': 1399}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'd7af7cdc55e6095954e54853950dca00', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 980794), 'questions_id': 1400}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '476cf6801589678be6d902d42201403d', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 982431), 'questions_id': 1450}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '37262c3322dd72a8858e217524a7779e', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 984246), 'questions_id': 1401}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '9415eca2590ecea62f7df749020fa547', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 985751), 'questions_id': 1402}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'ec35612004b49e34dcc9278e55a7d2f8', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 987382), 'questions_id': 1451}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '25ac57f77fad223774447e352c41e3fa', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 988897), 'questions_id': 1403}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'd1c2ae818e77f62512f0aa58f6f2a176', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 990482), 'questions_id': 1404}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'e71700f69964aea6bc67ed87c6a0c7f1', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 992091), 'questions_id': 1452}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'd6aac89b32b8165fd705a2512115d6b6', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 993550), 'questions_id': 1405}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '1e7c5dbbb6d53987cf4421d04192de54', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 995219), 'questions_id': 1453}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'a3997eb480bb83e227cb127014d9c5de', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 997126), 'questions_id': 1406}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '58cb16a3b63a39b78e9cac44515a691f', 'param_1': 1}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 32, 998862), 'questions_id': 1454}
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:32 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'ff3e43663c47f1f9cdb30598f948c1fd', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 455), 'questions_id': 1407}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '58e4d6692af69a7574d6403d2a76f642', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 2532), 'questions_id': 1455}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'aea7cecac9497d1a2db5f82e13b4a40d', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 4458), 'questions_id': 1456}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '3d3e9900bb1823addc52b05ab805548d', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 6209), 'questions_id': 1457}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'e8031d6dc5ad042a1faf7c87eb3c33e4', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 17020), 'questions_id': 1408}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '063a9bb2bdb76974c0e6cd0cf993aa8d', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 19157), 'questions_id': 1409}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '7b6de1e7defb384d55ad5445a35e2b3f', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 22747), 'questions_id': 1410}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '44920b916dded33cef752c3d10769be6', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 24794), 'questions_id': 1458}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '09efb4c13a9f784ff6610e416ba62518', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 26928), 'questions_id': 1459}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '3a3002b25c43c46586311f91e39efa26', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 28654), 'questions_id': 1460}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '6fc6a2b6471e48421dd6fd3aa64beb89', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 30515), 'questions_id': 1411}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '828bea08c44e4bbdd02baa273a436935', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 32647), 'questions_id': 1461}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '380360f5ea5dc0764551e5acb2ebc410', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 34305), 'questions_id': 1462}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'bd1c654a9212288a7e1569b677c83805', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 36130), 'questions_id': 1412}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'd7bd74f3c451232064432fc276fa5081', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 37697), 'questions_id': 1413}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '84a16679cd9dc04456db586390435877', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 43405), 'questions_id': 1463}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'e9035292d035a654b9568f280dcf17b7', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 48926), 'questions_id': 1464}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '1c7659fdbde3a9b84e0843d6d977c2a1', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 50832), 'questions_id': 1414}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'f978b28fc9602c9088cf928ac6ddc303', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 52617), 'questions_id': 1465}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '10f537f262dc967bb6b437a36a807693', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 54476), 'questions_id': 1466}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '4a38de5882144711aa271d5dcdab01ed', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 56270), 'questions_id': 1415}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'f1577e3c6e73b6c0bda886e04aafd5f5', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 58005), 'questions_id': 1416}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'eba73120ca001671932a8955f1e6502c', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 59671), 'questions_id': 1467}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'e43eac6a5209fe4dddbf58fee1118456', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 61218), 'questions_id': 1468}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'd73ea149be03f79c96ab04f432609b95', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 62832), 'questions_id': 1417}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '67a7220c882847d929551b506d5b02d6', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 64298), 'questions_id': 1469}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '6b3611061dd6c2e9cca9716d3d76c0e6', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 65773), 'questions_id': 1418}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '64e03738bb9b5a017a793983da1957a5', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 67467), 'questions_id': 1419}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'cd0f201075e6cefeef3250a7ca1e6b10', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 68987), 'questions_id': 1420}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'fcc0c7c305bde4bf80f937b0bef22c60', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 70454), 'questions_id': 1470}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '657142c1ef7787290214ddb5c29ba484', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 72077), 'questions_id': 1421}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'c2879217915964b9b44293fedb735e76', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 73502), 'questions_id': 1471}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '6a1718477906f52e99e007231f5a3680', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 75144), 'questions_id': 1422}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '486cb0fb43550bd5e3a4712f5d8c239e', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 76581), 'questions_id': 1472}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'e9b3bf1ae1a13315114eb48ccbe2b4d9', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 78300), 'questions_id': 1423}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'ea742fcbed6bbcb8083b5cc74532df8c', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 79973), 'questions_id': 1424}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'a875627b35ce07a58ab3d0027c6a8370', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 81507), 'questions_id': 1473}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '6efb0a50286801858598577f9756f7cc', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 83395), 'questions_id': 1425}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '543604c1d8586351fe6a678a9fd008e7', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 85211), 'questions_id': 1426}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '856bb8e9e6f0d36668696bcee09efab4', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 86904), 'questions_id': 1474}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '3567a04656692d20345dd5cf6a172557', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 88475), 'questions_id': 1475}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'ab59d9cd71a448796498fc71e9d8f6c8', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 90068), 'questions_id': 1476}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'bf1a413af58d43c6507bb5858b7dbd6e', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 91506), 'questions_id': 1477}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'aaa51f5e54f60689fc4c36b9a3a7102a', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 92901), 'questions_id': 1478}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '3b352100564af98b6ff41e23203f2909', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 94663), 'questions_id': 1427}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'dd444ad77363513b54634d88d3fbc9d4', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 96352), 'questions_id': 1428}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '3e5cc1ef96642a3e987560c280949c42', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 98129), 'questions_id': 1479}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '850f7332e52b0e3dba497ff033582734', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 99803), 'questions_id': 1480}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'fb74179539eb09871c3fbc30b1ac2bb1', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 101338), 'questions_id': 1429}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'df8e958246f05720262731d1ed95ec39', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 102865), 'questions_id': 1430}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'eab26ea5a9627755989016fd9940ce6a', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 104418), 'questions_id': 1431}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'd5de7bf900a96ce5917d78ba0a10fa6b', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 105888), 'questions_id': 1432}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '55a1667487a24b1fb344a1e7b19097d8', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 107730), 'questions_id': 1433}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'eff8009dc492fe92c5b0d74b0ac9e918', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 109362), 'questions_id': 1481}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '1116234feabe953e69bd08b644bfcf91', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 110973), 'questions_id': 1482}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '3ad95a0699ea9ea4d71e86ab59ec0e9c', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 115570), 'questions_id': 1434}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '6536f9fefa9f4ee74cc3b59549e6ffc8', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 117761), 'questions_id': 1483}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'd82e28635e9339c2b368eda6023a78ab', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 119356), 'questions_id': 1484}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '8205141c43ea2e3ddf6853f8218f7a35', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 121043), 'questions_id': 1435}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'bd26a1df8aee135a29051d34447b92ff', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 122768), 'questions_id': 1436}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'dd8e171ece7f52a534f7533523ccce61', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 124314), 'questions_id': 1485}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '5aa571d1381308d07c4d92f39be95138', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 125884), 'questions_id': 1437}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '101eb0aa498164cc8cfccad92e7dab01', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 127404), 'questions_id': 1438}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'c25e922db50a65ea3234b3e5752a7a42', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 128795), 'questions_id': 1439}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '2ac14b547359a76a56c8223e936c9bcf', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 130524), 'questions_id': 1440}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '311507341fc409952638bc21815ed3b1', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 132114), 'questions_id': 1486}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '6f7b916e9762180ab48441a60ed003c4', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 133600), 'questions_id': 1441}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'caabdae8891949bd04ad7fb58c6c19ac', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 135439), 'questions_id': 1487}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '85df4b45dd2f67f43381a8aa8bc73ed6', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 137030), 'questions_id': 1488}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': '1bc9890c4f5c268e0037227842e3555a', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 138834), 'questions_id': 1489}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'cb65f4d7139905c577dc0af4487a9019', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 140431), 'questions_id': 1490}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.business_id = %(business_id_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'business_id_1': 'effc0627762f70208a9bc927af1b111a', 'param_1': 1}
2025-08-19 11:54:33 - app.services.sync_service - INFO - 准备同步 100 条数据到questions表（classification字段将由AI处理服务填充）
2025-08-19 11:54:33 - app.services.sync_service - INFO - 准备同步 100 条数据到questions表（classification字段将由AI处理服务填充）
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE questions SET updated_at=%(updated_at)s WHERE questions.id = %(questions_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 142057), 'questions_id': 1491}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '7b22a0db6a8da27938ddb5e14c4ff019', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 143984), 'answers_id': 4287}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'a27722b4e4689fff4566cd43b74fb06a', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 145758), 'answers_id': 4288}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'e8146d52bbe9ceab98d2dab6e30db2ed', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 147502), 'answers_id': 4137}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'cf2211fc9eb449469613db5f947efcab', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 149407), 'answers_id': 4289}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'bccbc6acf52f7e3d5a33df48d444ad92', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 151026), 'answers_id': 4290}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '8cf63d22e34f4e0ec9b9620c934bf0c3', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 152538), 'answers_id': 4138}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '26a58fb2a92766f3339f88b759509552', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 153998), 'answers_id': 4291}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '83af0a8ba059bc2c346d8a6c3a6a0a19', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 155518), 'answers_id': 4139}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'bda2755170f34fe6f27354d66c2ca883', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 157162), 'answers_id': 4292}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '559bf43db7176d56a855bb6e9f764c78', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 158854), 'answers_id': 4293}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '4afddbe0e4f85fe9d9ca9e5a2d974765', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 160295), 'answers_id': 4294}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '8e818135ba252084f447a1942a9b767a', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 161833), 'answers_id': 4140}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'c54e7b687d7c7a3fced8ae1f52abe999', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 163368), 'answers_id': 4141}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'eab488b34a407e97c5f072469a39271c', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 165025), 'answers_id': 4142}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '2301d5e861f65c94d6a64ed2b96d9dd9', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 166760), 'answers_id': 4143}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '93182fbb00a15577f97dd4690e47409b', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 168509), 'answers_id': 4144}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'd7af7cdc55e6095954e54853950dca00', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 170211), 'answers_id': 4145}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '476cf6801589678be6d902d42201403d', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 171936), 'answers_id': 4295}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '37262c3322dd72a8858e217524a7779e', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 173756), 'answers_id': 4146}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '9415eca2590ecea62f7df749020fa547', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 175530), 'answers_id': 4147}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'ec35612004b49e34dcc9278e55a7d2f8', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 177157), 'answers_id': 4296}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '25ac57f77fad223774447e352c41e3fa', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 179163), 'answers_id': 4148}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'd1c2ae818e77f62512f0aa58f6f2a176', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 181508), 'answers_id': 4149}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'e71700f69964aea6bc67ed87c6a0c7f1', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 183349), 'answers_id': 4297}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'd6aac89b32b8165fd705a2512115d6b6', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 185064), 'answers_id': 4150}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '1e7c5dbbb6d53987cf4421d04192de54', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 187225), 'answers_id': 4298}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'a3997eb480bb83e227cb127014d9c5de', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 188741), 'answers_id': 4151}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '58cb16a3b63a39b78e9cac44515a691f', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 190262), 'answers_id': 4299}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'ff3e43663c47f1f9cdb30598f948c1fd', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 191881), 'answers_id': 4152}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '58e4d6692af69a7574d6403d2a76f642', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 193394), 'answers_id': 4300}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'aea7cecac9497d1a2db5f82e13b4a40d', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 194896), 'answers_id': 4301}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '3d3e9900bb1823addc52b05ab805548d', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 196691), 'answers_id': 4302}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'e8031d6dc5ad042a1faf7c87eb3c33e4', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 198204), 'answers_id': 4153}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '063a9bb2bdb76974c0e6cd0cf993aa8d', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 199784), 'answers_id': 4154}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '7b6de1e7defb384d55ad5445a35e2b3f', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 201380), 'answers_id': 4155}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '44920b916dded33cef752c3d10769be6', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 203120), 'answers_id': 4303}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '09efb4c13a9f784ff6610e416ba62518', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 205241), 'answers_id': 4304}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '3a3002b25c43c46586311f91e39efa26', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 206785), 'answers_id': 4305}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '6fc6a2b6471e48421dd6fd3aa64beb89', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 208300), 'answers_id': 4156}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '828bea08c44e4bbdd02baa273a436935', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 209843), 'answers_id': 4306}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '380360f5ea5dc0764551e5acb2ebc410', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 211378), 'answers_id': 4307}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'bd1c654a9212288a7e1569b677c83805', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 213387), 'answers_id': 4157}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'd7bd74f3c451232064432fc276fa5081', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 215660), 'answers_id': 4158}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '84a16679cd9dc04456db586390435877', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 217390), 'answers_id': 4308}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'e9035292d035a654b9568f280dcf17b7', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 219234), 'answers_id': 4309}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '1c7659fdbde3a9b84e0843d6d977c2a1', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 221310), 'answers_id': 4159}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'f978b28fc9602c9088cf928ac6ddc303', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 222961), 'answers_id': 4310}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '10f537f262dc967bb6b437a36a807693', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 224727), 'answers_id': 4311}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '4a38de5882144711aa271d5dcdab01ed', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 226722), 'answers_id': 4160}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'f1577e3c6e73b6c0bda886e04aafd5f5', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 228879), 'answers_id': 4161}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'eba73120ca001671932a8955f1e6502c', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 230970), 'answers_id': 4312}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'e43eac6a5209fe4dddbf58fee1118456', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 233017), 'answers_id': 4313}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'd73ea149be03f79c96ab04f432609b95', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 234888), 'answers_id': 4162}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '67a7220c882847d929551b506d5b02d6', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 236690), 'answers_id': 4314}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '6b3611061dd6c2e9cca9716d3d76c0e6', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 239431), 'answers_id': 4163}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '64e03738bb9b5a017a793983da1957a5', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 241431), 'answers_id': 4164}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'cd0f201075e6cefeef3250a7ca1e6b10', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 243474), 'answers_id': 4165}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'fcc0c7c305bde4bf80f937b0bef22c60', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 245331), 'answers_id': 4315}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '657142c1ef7787290214ddb5c29ba484', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 247819), 'answers_id': 4166}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'c2879217915964b9b44293fedb735e76', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 249556), 'answers_id': 4316}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '6a1718477906f52e99e007231f5a3680', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 251479), 'answers_id': 4167}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '486cb0fb43550bd5e3a4712f5d8c239e', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 253289), 'answers_id': 4317}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'e9b3bf1ae1a13315114eb48ccbe2b4d9', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 255010), 'answers_id': 4168}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'ea742fcbed6bbcb8083b5cc74532df8c', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 257073), 'answers_id': 4169}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'a875627b35ce07a58ab3d0027c6a8370', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 258819), 'answers_id': 4318}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '6efb0a50286801858598577f9756f7cc', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 260345), 'answers_id': 4170}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '543604c1d8586351fe6a678a9fd008e7', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 262147), 'answers_id': 4171}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '856bb8e9e6f0d36668696bcee09efab4', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 263808), 'answers_id': 4319}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '3567a04656692d20345dd5cf6a172557', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 265865), 'answers_id': 4320}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'ab59d9cd71a448796498fc71e9d8f6c8', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 267797), 'answers_id': 4321}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'bf1a413af58d43c6507bb5858b7dbd6e', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 269659), 'answers_id': 4322}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'aaa51f5e54f60689fc4c36b9a3a7102a', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 271926), 'answers_id': 4323}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '3b352100564af98b6ff41e23203f2909', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 273750), 'answers_id': 4172}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'dd444ad77363513b54634d88d3fbc9d4', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 275782), 'answers_id': 4173}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '3e5cc1ef96642a3e987560c280949c42', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 277726), 'answers_id': 4324}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '850f7332e52b0e3dba497ff033582734', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 279818), 'answers_id': 4325}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'fb74179539eb09871c3fbc30b1ac2bb1', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 281629), 'answers_id': 4174}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'df8e958246f05720262731d1ed95ec39', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 283746), 'answers_id': 4175}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'eab26ea5a9627755989016fd9940ce6a', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 285466), 'answers_id': 4176}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'd5de7bf900a96ce5917d78ba0a10fa6b', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 287344), 'answers_id': 4177}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '55a1667487a24b1fb344a1e7b19097d8', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 288856), 'answers_id': 4178}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'eff8009dc492fe92c5b0d74b0ac9e918', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 290808), 'answers_id': 4326}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '1116234feabe953e69bd08b644bfcf91', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 292499), 'answers_id': 4327}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '3ad95a0699ea9ea4d71e86ab59ec0e9c', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 293991), 'answers_id': 4179}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '6536f9fefa9f4ee74cc3b59549e6ffc8', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 295654), 'answers_id': 4328}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'd82e28635e9339c2b368eda6023a78ab', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 297541), 'answers_id': 4329}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '8205141c43ea2e3ddf6853f8218f7a35', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 299252), 'answers_id': 4180}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'bd26a1df8aee135a29051d34447b92ff', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 301029), 'answers_id': 4181}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'dd8e171ece7f52a534f7533523ccce61', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 302623), 'answers_id': 4330}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '5aa571d1381308d07c4d92f39be95138', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 304143), 'answers_id': 4182}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '101eb0aa498164cc8cfccad92e7dab01', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 305626), 'answers_id': 4183}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'c25e922db50a65ea3234b3e5752a7a42', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 307279), 'answers_id': 4184}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '2ac14b547359a76a56c8223e936c9bcf', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 308923), 'answers_id': 4185}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '311507341fc409952638bc21815ed3b1', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 310537), 'answers_id': 4331}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '6f7b916e9762180ab48441a60ed003c4', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 312121), 'answers_id': 4186}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'caabdae8891949bd04ad7fb58c6c19ac', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 313563), 'answers_id': 4332}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '85df4b45dd2f67f43381a8aa8bc73ed6', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 314993), 'answers_id': 4333}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': '1bc9890c4f5c268e0037227842e3555a', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 316846), 'answers_id': 4334}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'cb65f4d7139905c577dc0af4487a9019', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 318441), 'answers_id': 4335}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.question_business_id = %(question_business_id_1)s AND answers.assistant_type = %(assistant_type_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'question_business_id_1': 'effc0627762f70208a9bc927af1b111a', 'assistant_type_1': 'yoyo', 'param_1': 1}
2025-08-19 11:54:33 - app.services.sync_service - INFO - 准备同步 100 条答案到answers表
2025-08-19 11:54:33 - app.services.sync_service - INFO - 准备同步 100 条答案到answers表
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - UPDATE answers SET updated_at=%(updated_at)s WHERE answers.id = %(answers_id)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'updated_at': datetime.datetime(2025, 8, 19, 3, 54, 33, 321536), 'answers_id': 4336}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-08-19 11:54:33 - app.services.sync_service - INFO - 数据同步完成: {'success': True, 'message': '成功同步 100 条问题和 100 条答案', 'synced_questions': 100, 'synced_answers': 100, 'total_synced': 1800}
2025-08-19 11:54:33 - app.services.sync_service - INFO - 数据同步完成: {'success': True, 'message': '成功同步 100 条问题和 100 条答案', 'synced_questions': 100, 'synced_answers': 100, 'total_synced': 1800}
2025-08-19 11:54:33 - app.services.scheduler_service - INFO - 数据同步阶段完成: 成功同步 100 条问题和 100 条答案
2025-08-19 11:54:33 - app.services.scheduler_service - INFO - 数据同步阶段完成: 成功同步 100 条问题和 100 条答案
2025-08-19 11:54:33 - app.services.scheduler_service - INFO - 执行工作流阶段: classification
2025-08-19 11:54:33 - app.services.scheduler_service - INFO - 执行工作流阶段: classification
2025-08-19 11:54:33 - app.services.scheduler_service - INFO - 开始执行分类处理阶段 [workflow: workflow_20250819_035432]
2025-08-19 11:54:33 - app.services.scheduler_service - INFO - 开始执行分类处理阶段 [workflow: workflow_20250819_035432]
2025-08-19 11:54:33 - app.services.ai_processing_service - INFO - 开始批量分类处理
2025-08-19 11:54:33 - app.services.ai_processing_service - INFO - 开始批量分类处理
2025-08-19 11:54:33 - app.services.ai_processing_service - INFO - 查找所有待分类问题（不限制时间范围和处理状态）
2025-08-19 11:54:33 - app.services.ai_processing_service - INFO - 查找所有待分类问题（不限制时间范围和处理状态）
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE (questions.classification IS NULL OR questions.classification = %(classification_1)s) AND questions.is_deleted = false ORDER BY questions.created_at DESC
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'classification_1': ''}
2025-08-19 11:54:33 - app.services.scheduler_service - INFO - 分类处理阶段完成: 没有需要分类的问题
2025-08-19 11:54:33 - app.services.scheduler_service - INFO - 分类处理阶段完成: 没有需要分类的问题
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:54:33 - app.services.scheduler_service - INFO - 执行工作流阶段: answer_generation
2025-08-19 11:54:33 - app.services.scheduler_service - INFO - 执行工作流阶段: answer_generation
2025-08-19 11:54:33 - app.services.scheduler_service - INFO - 开始执行答案生成阶段 [workflow: workflow_20250819_035432]
2025-08-19 11:54:33 - app.services.scheduler_service - INFO - 开始执行答案生成阶段 [workflow: workflow_20250819_035432]
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT system_config.id AS system_config_id, system_config.config_key AS system_config_config_key, system_config.config_value AS system_config_config_value, system_config.config_type AS system_config_config_type, system_config.description AS system_config_description, system_config.effective_time AS system_config_effective_time, system_config.previous_value AS system_config_previous_value, system_config.status AS system_config_status, system_config.created_at AS system_config_created_at, system_config.updated_at AS system_config_updated_at 
FROM system_config 
WHERE system_config.config_key = %(config_key_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'config_key_1': 'workflow.answer_generation_mode', 'param_1': 1}
2025-08-19 11:54:33 - app.services.scheduler_service - INFO - 当前答案生成模式: manual
2025-08-19 11:54:33 - app.services.scheduler_service - INFO - 当前答案生成模式: manual
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.processing_status = %(processing_status_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND (EXISTS (SELECT 1 
FROM answers 
WHERE answers.question_business_id = questions.business_id AND answers.assistant_type = %(assistant_type_1)s AND answers.answer_text IS NOT NULL AND answers.answer_text != %(answer_text_1)s)) AND NOT (EXISTS (SELECT 1 
FROM answers 
WHERE answers.question_business_id = questions.business_id AND answers.assistant_type = %(assistant_type_2)s)) AND NOT (EXISTS (SELECT 1 
FROM answers 
WHERE answers.question_business_id = questions.business_id AND answers.assistant_type = %(assistant_type_3)s))) AS anon_1
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2953s ago] {'processing_status_1': 'classified', 'classification_1': '', 'assistant_type_1': 'yoyo', 'answer_text_1': '', 'assistant_type_2': 'doubao', 'assistant_type_3': 'xiaotian'}
2025-08-19 11:54:33 - app.services.answer_generation_service - INFO - 待导出问题数量: 46 (已分类+有yoyo答案+缺少doubao/xiaotian答案)
2025-08-19 11:54:33 - app.services.answer_generation_service - INFO - 待导出问题数量: 46 (已分类+有yoyo答案+缺少doubao/xiaotian答案)
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:54:33 - app.services.scheduler_service - INFO - 执行工作流阶段: scoring
2025-08-19 11:54:33 - app.services.scheduler_service - INFO - 执行工作流阶段: scoring
2025-08-19 11:54:33 - app.services.scheduler_service - INFO - 开始执行评分处理阶段 [workflow: workflow_20250819_035432]
2025-08-19 11:54:33 - app.services.scheduler_service - INFO - 开始执行评分处理阶段 [workflow: workflow_20250819_035432]
2025-08-19 11:54:33 - app.services.ai_processing_service - INFO - 开始批量评分处理
2025-08-19 11:54:33 - app.services.ai_processing_service - INFO - 开始批量评分处理
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - SELECT DISTINCT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions JOIN answers ON questions.business_id = answers.question_business_id 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND questions.processing_status IN (%(processing_status_1_1)s, %(processing_status_1_2)s) AND answers.answer_text IS NOT NULL AND answers.answer_text != %(answer_text_1)s ORDER BY questions.created_at DESC
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - [cached since 2833s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 3, 54, 33, 330875), 'classification_1': '', 'answer_text_1': '', 'processing_status_1_1': 'answers_generated', 'processing_status_1_2': 'scoring'}
2025-08-19 11:54:33 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:54:33 - app.services.scheduler_service - INFO - 阶段 scoring 不自动进入下一阶段，工作流暂停
2025-08-19 11:54:33 - app.services.scheduler_service - INFO - 阶段 scoring 不自动进入下一阶段，工作流暂停
2025-08-19 11:54:33 - apscheduler.executors.default - INFO - Job "可配置间隔AI处理工作流 (trigger: interval[0:03:00], next run at: 2025-08-19 11:57:32 CST)" executed successfully
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT questions.classification AS questions_classification, count(questions.id) AS badcase_count 
FROM questions 
WHERE questions.is_badcase = true GROUP BY questions.classification ORDER BY count(questions.id) DESC 
 LIMIT %(param_1)s
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 1353s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored'}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.7s ago] {'param_1': 3}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 1414s ago] {}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.is_badcase = true) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - 
                WITH dimension_scores AS (
                    -- 维度1的数据
                    SELECT
                        s.dimension_1_name as dimension_name,
                        s.score_1 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_1_name IS NOT NULL
                    AND s.score_1 IS NOT NULL

                    UNION ALL

                    -- 维度2的数据
                    SELECT
                        s.dimension_2_name as dimension_name,
                        s.score_2 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_2_name IS NOT NULL
                    AND s.score_2 IS NOT NULL

                    UNION ALL

                    -- 维度3的数据
                    SELECT
                        s.dimension_3_name as dimension_name,
                        s.score_3 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_3_name IS NOT NULL
                    AND s.score_3 IS NOT NULL

                    UNION ALL

                    -- 维度4的数据
                    SELECT
                        s.dimension_4_name as dimension_name,
                        s.score_4 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_4_name IS NOT NULL
                    AND s.score_4 IS NOT NULL

                    UNION ALL

                    -- 维度5的数据
                    SELECT
                        s.dimension_5_name as dimension_name,
                        s.score_5 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_5_name IS NOT NULL
                    AND s.score_5 IS NOT NULL
                )
                SELECT
                    dimension_name,
                    AVG(score) as avg_score,
                    COUNT(*) as sample_count
                FROM dimension_scores
                GROUP BY dimension_name
                ORDER BY avg_score ASC
            
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0)}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 1353s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored'}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.7s ago] {'classification': '产品使用'}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.is_badcase = true AND questions.badcase_review_status = %(badcase_review_status_1)s) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': ''}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 1353s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored', 'badcase_review_status_1': 'pending'}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - 
                WITH dimension_scores AS (
                    -- 维度1的数据
                    SELECT
                        s.dimension_1_name as dimension_name,
                        s.score_1 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_1_name IS NOT NULL
                    AND s.score_1 IS NOT NULL

                    UNION ALL

                    -- 维度2的数据
                    SELECT
                        s.dimension_2_name as dimension_name,
                        s.score_2 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_2_name IS NOT NULL
                    AND s.score_2 IS NOT NULL

                    UNION ALL

                    -- 维度3的数据
                    SELECT
                        s.dimension_3_name as dimension_name,
                        s.score_3 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_3_name IS NOT NULL
                    AND s.score_3 IS NOT NULL

                    UNION ALL

                    -- 维度4的数据
                    SELECT
                        s.dimension_4_name as dimension_name,
                        s.score_4 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_4_name IS NOT NULL
                    AND s.score_4 IS NOT NULL

                    UNION ALL

                    -- 维度5的数据
                    SELECT
                        s.dimension_5_name as dimension_name,
                        s.score_5 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_5_name IS NOT NULL
                    AND s.score_5 IS NOT NULL
                )
                SELECT
                    dimension_name,
                    AVG(score) as avg_score,
                    COUNT(*) as sample_count
                FROM dimension_scores
                GROUP BY dimension_name
                ORDER BY avg_score ASC
            
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.badcase_review_status = %(badcase_review_status_1)s) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'classification_1': ''}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.7s ago] {'classification': '其他'}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 1353s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored', 'badcase_review_status_1': 'reviewed'}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT access_logs.id AS access_logs_id, access_logs.user_id AS access_logs_user_id, access_logs.username AS access_logs_username, access_logs.action AS access_logs_action, access_logs.ip_address AS access_logs_ip_address, access_logs.created_at AS access_logs_created_at 
FROM access_logs 
WHERE access_logs.action = %(action_1)s) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.created_at <= %(created_at_2)s AND questions.processing_status = %(processing_status_1)s AND questions.badcase_review_status = %(badcase_review_status_1)s AND questions.is_badcase = false) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 521.1s ago] {'action_1': 'login'}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 1353s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 24, 23, 59, 59, 999999), 'processing_status_1': 'scored', 'badcase_review_status_1': 'reviewed'}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT access_logs.id AS access_logs_id, access_logs.user_id AS access_logs_user_id, access_logs.username AS access_logs_username, access_logs.action AS access_logs_action, access_logs.ip_address AS access_logs_ip_address, access_logs.created_at AS access_logs_created_at 
FROM access_logs 
WHERE access_logs.action = %(action_1)s AND access_logs.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - 
                WITH dimension_scores AS (
                    -- 维度1的数据
                    SELECT
                        s.dimension_1_name as dimension_name,
                        s.score_1 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_1_name IS NOT NULL
                    AND s.score_1 IS NOT NULL

                    UNION ALL

                    -- 维度2的数据
                    SELECT
                        s.dimension_2_name as dimension_name,
                        s.score_2 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_2_name IS NOT NULL
                    AND s.score_2 IS NOT NULL

                    UNION ALL

                    -- 维度3的数据
                    SELECT
                        s.dimension_3_name as dimension_name,
                        s.score_3 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_3_name IS NOT NULL
                    AND s.score_3 IS NOT NULL

                    UNION ALL

                    -- 维度4的数据
                    SELECT
                        s.dimension_4_name as dimension_name,
                        s.score_4 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_4_name IS NOT NULL
                    AND s.score_4 IS NOT NULL

                    UNION ALL

                    -- 维度5的数据
                    SELECT
                        s.dimension_5_name as dimension_name,
                        s.score_5 as score
                    FROM questions q
                    JOIN answers a ON q.business_id = a.question_business_id
                    JOIN scores s ON a.id = s.answer_id
                    WHERE q.classification = %(classification)s
                    AND q.is_badcase = true
                    AND s.dimension_5_name IS NOT NULL
                    AND s.score_5 IS NOT NULL
                )
                SELECT
                    dimension_name,
                    AVG(score) as avg_score,
                    COUNT(*) as sample_count
                FROM dimension_scores
                GROUP BY dimension_name
                ORDER BY avg_score ASC
            
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'action_1': 'login', 'created_at_1': datetime.datetime(2025, 8, 18, 0, 0)}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.7s ago] {'classification': '经济问题'}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 0, 0)}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0)}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': ''}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT coalesce(sum(least(anon_1.cnt, %(least_1)s)), %(coalesce_2)s) AS coalesce_1 
FROM (SELECT answers.question_business_id AS qbid, count(answers.id) AS cnt 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE questions.created_at >= %(created_at_1)s AND answers.created_at >= %(created_at_2)s AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s) AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s GROUP BY answers.question_business_id) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'least_1': 2, 'coalesce_2': 0, 'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'created_at_2': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': '', 'assistant_type_1_1': 'doubao', 'assistant_type_1_2': 'xiaotian'}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT count(distinct(answers.question_business_id)) AS count_2 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND answers.is_scored = true AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s, %(assistant_type_1_3)s) GROUP BY answers.question_business_id 
HAVING count(distinct(answers.assistant_type)) = %(count_3)s) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': '', 'count_3': 3, 'assistant_type_1_1': 'yoyo', 'assistant_type_1_2': 'doubao', 'assistant_type_1_3': 'xiaotian'}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(distinct(questions.business_id)) AS count_1 
FROM questions JOIN answers ON questions.business_id = answers.question_business_id 
WHERE questions.created_at >= %(created_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s) AND answers.created_at >= %(created_at_2)s
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'classification_1': '', 'created_at_2': datetime.datetime(2025, 8, 18, 0, 0), 'assistant_type_1_1': 'doubao', 'assistant_type_1_2': 'xiaotian'}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.processing_status = %(processing_status_1)s AND questions.is_badcase = true) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'processing_status_1': 'scored'}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s AND questions.processing_status = %(processing_status_1)s AND questions.badcase_review_status = %(badcase_review_status_1)s) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 0, 0), 'processing_status_1': 'scored', 'badcase_review_status_1': 'reviewed'}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 2, 54, 56, 634086)}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'created_at_1': datetime.datetime(2025, 8, 18, 21, 54, 56, 634086)}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.updated_at >= %(updated_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'updated_at_1': datetime.datetime(2025, 8, 19, 3, 24, 56, 634086), 'classification_1': ''}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 3, 24, 56, 634086)}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.updated_at >= %(updated_at_1)s AND answers.is_scored = true) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'updated_at_1': datetime.datetime(2025, 8, 19, 3, 24, 56, 634086)}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT date_trunc(%(date_trunc_1)s, questions.created_at) AS day, count(questions.id) AS count 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s GROUP BY date_trunc(%(date_trunc_2)s, questions.created_at) ORDER BY day
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'date_trunc_1': 'day', 'created_at_1': datetime.datetime(2025, 8, 12, 3, 54, 56, 648383), 'date_trunc_2': 'day'}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT date_trunc(%(date_trunc_1)s, questions.updated_at) AS day, count(questions.id) AS count 
FROM questions 
WHERE questions.updated_at >= %(updated_at_1)s AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND questions.processing_status IN (%(processing_status_1_1)s, %(processing_status_1_2)s, %(processing_status_1_3)s) GROUP BY date_trunc(%(date_trunc_2)s, questions.updated_at) ORDER BY day
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'date_trunc_1': 'day', 'updated_at_1': datetime.datetime(2025, 8, 12, 3, 54, 56, 648383), 'classification_1': '', 'date_trunc_2': 'day', 'processing_status_1_1': 'classified', 'processing_status_1_2': 'answers_generated', 'processing_status_1_3': 'scored'}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT date_trunc(%(date_trunc_1)s, answers.created_at) AS day, count(answers.id) AS count 
FROM answers JOIN questions ON answers.question_business_id = questions.business_id 
WHERE answers.created_at >= %(created_at_1)s AND questions.created_at >= %(created_at_2)s AND answers.assistant_type IN (%(assistant_type_1_1)s, %(assistant_type_1_2)s) AND answers.is_scored = true AND questions.classification IS NOT NULL AND questions.classification != %(classification_1)s GROUP BY date_trunc(%(date_trunc_2)s, answers.created_at) ORDER BY day
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'date_trunc_1': 'day', 'created_at_1': datetime.datetime(2025, 8, 12, 3, 54, 56, 648383), 'created_at_2': datetime.datetime(2025, 8, 12, 3, 54, 56, 648383), 'classification_1': '', 'date_trunc_2': 'day', 'assistant_type_1_1': 'doubao', 'assistant_type_1_2': 'xiaotian'}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT answers.assistant_type AS answers_assistant_type, avg(scores.score_1) AS avg_score_1, avg(scores.score_2) AS avg_score_2, avg(scores.score_3) AS avg_score_3, avg(scores.score_4) AS avg_score_4, avg(scores.score_5) AS avg_score_5, avg(scores.average_score) AS avg_total, count(scores.id) AS score_count 
FROM answers JOIN scores ON answers.id = scores.answer_id GROUP BY answers.assistant_type
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT system_config.id AS system_config_id, system_config.config_key AS system_config_config_key, system_config.config_value AS system_config_config_value, system_config.config_type AS system_config_config_type, system_config.description AS system_config_description, system_config.effective_time AS system_config_effective_time, system_config.previous_value AS system_config_previous_value, system_config.status AS system_config_status, system_config.created_at AS system_config_created_at, system_config.updated_at AS system_config_updated_at 
FROM system_config 
WHERE system_config.config_key = %(config_key_1)s 
 LIMIT %(param_1)s
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 2857s ago] {'config_key_1': 'display.hot_categories_time_range', 'param_1': 1}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT questions.classification AS name, count(questions.id) AS count 
FROM questions 
WHERE questions.classification IS NOT NULL AND questions.classification != %(classification_1)s GROUP BY questions.classification
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'classification_1': ''}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT questions.classification AS name, count(questions.id) AS count 
FROM questions 
WHERE questions.classification IS NOT NULL AND questions.classification != %(classification_1)s AND questions.created_at >= %(created_at_1)s GROUP BY questions.classification ORDER BY count(questions.id) DESC
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'classification_1': '', 'created_at_1': datetime.datetime(2025, 8, 12, 3, 54, 56, 655280)}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions ORDER BY questions.created_at DESC 
 LIMIT %(param_1)s
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'param_1': 5}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers ORDER BY answers.created_at DESC 
 LIMIT %(param_1)s
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'param_1': 5}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT scores.id AS scores_id, scores.answer_id AS scores_answer_id, scores.score_1 AS scores_score_1, scores.score_2 AS scores_score_2, scores.score_3 AS scores_score_3, scores.score_4 AS scores_score_4, scores.score_5 AS scores_score_5, scores.dimension_1_name AS scores_dimension_1_name, scores.dimension_2_name AS scores_dimension_2_name, scores.dimension_3_name AS scores_dimension_3_name, scores.dimension_4_name AS scores_dimension_4_name, scores.dimension_5_name AS scores_dimension_5_name, scores.average_score AS scores_average_score, scores.comment AS scores_comment, scores.rated_at AS scores_rated_at 
FROM scores ORDER BY scores.rated_at DESC 
 LIMIT %(param_1)s
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'param_1': 5}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT questions.id AS questions_id, questions.business_id AS questions_business_id, questions.pageid AS questions_pageid, questions.devicetypename AS questions_devicetypename, questions.query AS questions_query, questions.sendmessagetime AS questions_sendmessagetime, questions.classification AS questions_classification, questions.serviceid AS questions_serviceid, questions.qatype AS questions_qatype, questions.intent AS questions_intent, questions.iskeyboardinput AS questions_iskeyboardinput, questions.isstopanswer AS questions_isstopanswer, questions.is_deleted AS questions_is_deleted, questions.processing_status AS questions_processing_status, questions.is_badcase AS questions_is_badcase, questions.badcase_detected_at AS questions_badcase_detected_at, questions.badcase_review_status AS questions_badcase_review_status, questions.badcase_dimensions AS questions_badcase_dimensions, questions.reviewed_at AS questions_reviewed_at, questions.reviewed_by AS questions_reviewed_by, questions.created_at AS questions_created_at, questions.updated_at AS questions_updated_at 
FROM questions 
WHERE questions.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.3s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 3, 49, 56, 658894)}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'created_at_1': datetime.datetime(2025, 8, 19, 3, 49, 56, 658894)}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT scores.id AS scores_id, scores.answer_id AS scores_answer_id, scores.score_1 AS scores_score_1, scores.score_2 AS scores_score_2, scores.score_3 AS scores_score_3, scores.score_4 AS scores_score_4, scores.score_5 AS scores_score_5, scores.dimension_1_name AS scores_dimension_1_name, scores.dimension_2_name AS scores_dimension_2_name, scores.dimension_3_name AS scores_dimension_3_name, scores.dimension_4_name AS scores_dimension_4_name, scores.dimension_5_name AS scores_dimension_5_name, scores.average_score AS scores_average_score, scores.comment AS scores_comment, scores.rated_at AS scores_rated_at 
FROM scores 
WHERE scores.rated_at >= %(rated_at_1)s) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'rated_at_1': datetime.datetime(2025, 8, 19, 3, 49, 56, 658894)}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.assistant_type = %(assistant_type_1)s AND answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'assistant_type_1': 'yoyo', 'created_at_1': datetime.datetime(2025, 8, 19, 3, 49, 56, 658894)}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.assistant_type = %(assistant_type_1)s AND answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'assistant_type_1': 'doubao', 'created_at_1': datetime.datetime(2025, 8, 19, 3, 49, 56, 658894)}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - SELECT count(*) AS count_1 
FROM (SELECT answers.id AS answers_id, answers.question_business_id AS answers_question_business_id, answers.answer_text AS answers_answer_text, answers.assistant_type AS answers_assistant_type, answers.is_scored AS answers_is_scored, answers.answer_time AS answers_answer_time, answers.created_at AS answers_created_at, answers.updated_at AS answers_updated_at 
FROM answers 
WHERE answers.assistant_type = %(assistant_type_1)s AND answers.created_at >= %(created_at_1)s) AS anon_1
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - [cached since 518.2s ago] {'assistant_type_1': 'xiaotian', 'created_at_1': datetime.datetime(2025, 8, 19, 3, 49, 56, 658894)}
2025-08-19 11:54:56 - sqlalchemy.engine.Engine - INFO - ROLLBACK
